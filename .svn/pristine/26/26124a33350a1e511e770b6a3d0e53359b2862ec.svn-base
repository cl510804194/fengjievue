/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.TblHotelLongSetDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.TblHotelLongSetDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.TblHotelLongSetDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/tbl_hotel_long_set.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisTblHotelLongSetDAO extends SqlMapClientDaoSupport implements TblHotelLongSetDAO {
	/**
	 *  Insert one <tt>TblHotelLongSetDO</tt> object to DB table <tt>tbl_hotel_long_set</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into tbl_hotel_long_set(id,supplier_id,product_id,type,rule_type,room_num,beginDate,endDate,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tblHotelLongSet
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(TblHotelLongSetDO tblHotelLongSet) throws DataAccessException {
    	if (tblHotelLongSet == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-TBL-HOTEL-LONG-SET-INSERT", tblHotelLongSet);

        return tblHotelLongSet.getId();
    }

	/**
	 *  Update DB table <tt>tbl_hotel_long_set</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update tbl_hotel_long_set set supplier_id=?, product_id=?, type=?, rule_type=?, room_num=?, beginDate=?, endDate=? where (id = ?)</tt>
	 *
	 *	@param tblHotelLongSet
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TblHotelLongSetDO tblHotelLongSet) throws DataAccessException {
    	if (tblHotelLongSet == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-TBL-HOTEL-LONG-SET-UPDATE", tblHotelLongSet);
    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_set</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, supplier_id, product_id, type, rule_type, room_num, beginDate, endDate, raw_add_time, raw_update_time from tbl_hotel_long_set where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return TblHotelLongSetDO
	 *	@throws DataAccessException
	 */	 
    public TblHotelLongSetDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (TblHotelLongSetDO) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-SET-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_set</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, supplier_id, product_id, type, rule_type, room_num, beginDate, endDate, raw_add_time, raw_update_time from tbl_hotel_long_set where ((supplier_id = ?) AND (product_id = ?))</tt>
	 *
	 *	@param supplierId
	 *	@param productId
	 *	@return TblHotelLongSetDO
	 *	@throws DataAccessException
	 */	 
    public TblHotelLongSetDO findBySupplierIdAndProductId(long supplierId, long productId) throws DataAccessException {
        Map param = new HashMap();

        param.put("supplierId", new Long(supplierId));
        param.put("productId", new Long(productId));

        return (TblHotelLongSetDO) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-SET-FIND-BY-SUPPLIER-ID-AND-PRODUCT-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>tbl_hotel_long_set</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_hotel_long_set where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-TBL-HOTEL-LONG-SET-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_set</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_hotel_long_set</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException {

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-SET-FIND-ALL-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_set</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_hotel_long_set</tt>
	 *
	 *	@return List<TblHotelLongSetDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblHotelLongSetDO> findAllDiscount() throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-TBL-HOTEL-LONG-SET-FIND-ALL-DISCOUNT", null);

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_set</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_hotel_long_set where (1 = 1)</tt>
	 *
	 *	@param limitStart
	 *	@param pageSize
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(long limitStart, long pageSize) throws DataAccessException {
        Map param = new HashMap();

        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-SET-FIND-BY-CONDITION-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_set</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_hotel_long_set where (1 = 1)</tt>
	 *
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<TblHotelLongSetDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblHotelLongSetDO> findByCondition(long limitStart, long pageSize) throws DataAccessException {
        Map param = new HashMap();

        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-TBL-HOTEL-LONG-SET-FIND-BY-CONDITION", param);

    }

}