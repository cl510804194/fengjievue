/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.AppEquipmentLoginDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>app_equipment_login</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/app_equipment_login.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface AppEquipmentLoginDAO {
	/**
	 *  Insert one <tt>AppEquipmentLoginDO</tt> object to DB table <tt>app_equipment_login</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into app_equipment_login(equipment_no,user_id,user_name,user_log,info1,info2,raw_add_time) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param appEquipmentLogin
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insert(AppEquipmentLoginDO appEquipmentLogin) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>app_equipment_login</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from app_equipment_login where (equipment_no = ?)</tt>
	 *
	 *	@param equipmentNo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByEquipmentNo(String equipmentNo) throws DataAccessException;

	/**
	 *  Update DB table <tt>app_equipment_login</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update app_equipment_login set user_id=?, user_name=?, user_log=?, info1=?, info2=?, raw_update_time=? where (equipment_no = ?)</tt>
	 *
	 *	@param appEquipmentLogin
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateByEquipmentNo(AppEquipmentLoginDO appEquipmentLogin) throws DataAccessException;

	/**
	 *  Query DB table <tt>app_equipment_login</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select equipment_no, user_id, user_name, user_log, info1, info2, raw_update_time, raw_add_time from app_equipment_login where (equipment_no = ?)</tt>
	 *
	 *	@param equipmentNo
	 *	@return AppEquipmentLoginDO
	 *	@throws DataAccessException
	 */	 
    public AppEquipmentLoginDO findByEquipmentNo(String equipmentNo) throws DataAccessException;

	/**
	 *  Query DB table <tt>app_equipment_login</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select equipment_no, user_id, user_name, user_log, info1, info2, raw_update_time, raw_add_time from app_equipment_login where (user_id = ?) order by raw_update_time DESC</tt>
	 *
	 *	@param userId
	 *	@return List<AppEquipmentLoginDO>
	 *	@throws DataAccessException
	 */	 
    public List<AppEquipmentLoginDO> findByUserId(long userId) throws DataAccessException;

}