/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.TblSyncOrderDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>tbl_sync_order</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/tbl_sync_order.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface TblSyncOrderDAO {
	/**
	 *  Insert one <tt>TblSyncOrderDO</tt> object to DB table <tt>tbl_sync_order</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into tbl_sync_order(inf_id,refund_id,order_no,merchant_no,customer_id,refund_amount,status,refund_time,refund_type,goods_info) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tblSyncOrder
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(TblSyncOrderDO tblSyncOrder) throws DataAccessException;

	/**
	 *  Update DB table <tt>tbl_sync_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update tbl_sync_order set order_no=?, merchant_no=?, customer_id=?, refund_amount=?, status=?, refund_time=?, refund_type=?, goods_info=? where (refund_id = ?)</tt>
	 *
	 *	@param tblSyncOrder
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TblSyncOrderDO tblSyncOrder) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_sync_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_sync_order where (refund_id = ?)</tt>
	 *
	 *	@param refundId
	 *	@return TblSyncOrderDO
	 *	@throws DataAccessException
	 */	 
    public TblSyncOrderDO findById(long refundId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_sync_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_sync_order where (refund_id = ?) for update</tt>
	 *
	 *	@param refundId
	 *	@return TblSyncOrderDO
	 *	@throws DataAccessException
	 */	 
    public TblSyncOrderDO findByIdForUpdate(long refundId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_sync_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_sync_order where (status = ?)</tt>
	 *
	 *	@param status
	 *	@return List<TblSyncOrderDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblSyncOrderDO> findByCanRefund(String status) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>tbl_sync_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_sync_order where (refund_id = ?)</tt>
	 *
	 *	@param refundId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long refundId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_sync_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_sync_order</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_sync_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_sync_order where (1 = 1)</tt>
	 *
	 *	@param tblSyncOrder
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<TblSyncOrderDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblSyncOrderDO> findByCondition(TblSyncOrderDO tblSyncOrder, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_sync_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_sync_order where (1 = 1)</tt>
	 *
	 *	@param tblSyncOrder
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(TblSyncOrderDO tblSyncOrder) throws DataAccessException;

}