/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.TradeFlowCodeDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>trade_flow_code</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/trade_flow_code.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface TradeFlowCodeDAO {
	/**
	 *  Insert one <tt>TradeFlowCodeDO</tt> object to DB table <tt>trade_flow_code</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into trade_flow_code(tbl_base_id,trade_detail_id,trade_flow_code,row_add_time,note,rem1,state) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tradeFlowCode
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insert(TradeFlowCodeDO tradeFlowCode) throws DataAccessException;

	/**
	 *  Update DB table <tt>trade_flow_code</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update trade_flow_code set trade_detail_id=?, trade_flow_code=?, row_add_time=?, note=?, rem1=?, state=? where (tbl_base_id = ?)</tt>
	 *
	 *	@param tradeFlowCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TradeFlowCodeDO tradeFlowCode) throws DataAccessException;

	/**
	 *  Query DB table <tt>trade_flow_code</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, trade_detail_id, trade_flow_code, row_add_time, note, rem1, state from trade_flow_code where (tbl_base_id = ?)</tt>
	 *
	 *	@param tblBaseId
	 *	@return TradeFlowCodeDO
	 *	@throws DataAccessException
	 */	 
    public TradeFlowCodeDO findById(String tblBaseId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>trade_flow_code</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from trade_flow_code where (tbl_base_id = ?)</tt>
	 *
	 *	@param tblBaseId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(String tblBaseId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>trade_flow_code</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from trade_flow_code where (trade_detail_id = ?)</tt>
	 *
	 *	@param tradeDetailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByTradeDetailId(long tradeDetailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>trade_flow_code</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, trade_detail_id, trade_flow_code, row_add_time, note, rem1, state from trade_flow_code where (trade_detail_id = ?)</tt>
	 *
	 *	@param tradeDetailId
	 *	@return TradeFlowCodeDO
	 *	@throws DataAccessException
	 */	 
    public TradeFlowCodeDO findByTradeDetailId(long tradeDetailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>trade_flow_code</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from trade_flow_code</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException;

	/**
	 *  Query DB table <tt>trade_flow_code</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, trade_detail_id, trade_flow_code, row_add_time, note, rem1, state from trade_flow_code where (trade_detail_id = ?)</tt>
	 *
	 *	@param tradeDetailId
	 *	@return TradeFlowCodeDO
	 *	@throws DataAccessException
	 */	 
    public TradeFlowCodeDO findByTradeDetailIdAutotest(long tradeDetailId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>trade_flow_code</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from trade_flow_code where (trade_detail_id = ?)</tt>
	 *
	 *	@param tradeDetailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByTradeDetailIdAutotest(long tradeDetailId) throws DataAccessException;

	/**
	 *  Insert one <tt>TradeFlowCodeDO</tt> object to DB table <tt>trade_flow_code</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into trade_flow_code(tbl_base_id,trade_detail_id,trade_flow_code,row_add_time,note,rem1,state) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tradeFlowCode
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insertAutotest(TradeFlowCodeDO tradeFlowCode) throws DataAccessException;

}