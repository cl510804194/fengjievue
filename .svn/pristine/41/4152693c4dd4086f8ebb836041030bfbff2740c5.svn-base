/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.LotteryActivityDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>lottery_activity</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/lottery_activity.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface LotteryActivityDAO {
	/**
	 *  Insert one <tt>LotteryActivityDO</tt> object to DB table <tt>lottery_activity</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into lottery_activity(id,name,start_time,end_time,lotter_type,condition_begin_date,condition_end_date,prize_rule_id,prize_rule_name,people_num,status,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param lotteryActivity
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(LotteryActivityDO lotteryActivity) throws DataAccessException;

	/**
	 *  Update DB table <tt>lottery_activity</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update lottery_activity set name=?, start_time=?, end_time=?, lotter_type=?, condition_begin_date=?, condition_end_date=?, prize_rule_id=?, prize_rule_name=?, people_num=?, status=? where (id = ?)</tt>
	 *
	 *	@param lotteryActivity
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(LotteryActivityDO lotteryActivity) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, start_time, end_time, lotter_type, condition_begin_date, condition_end_date, prize_rule_id, prize_rule_name, people_num, status, raw_add_time, raw_update_time from lottery_activity where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return LotteryActivityDO
	 *	@throws DataAccessException
	 */	 
    public LotteryActivityDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, start_time, end_time, lotter_type, condition_begin_date, condition_end_date, prize_rule_id, prize_rule_name, people_num, status, raw_add_time, raw_update_time from lottery_activity where (id = ?) for update</tt>
	 *
	 *	@param id
	 *	@return LotteryActivityDO
	 *	@throws DataAccessException
	 */	 
    public LotteryActivityDO findByIdForUpdate(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>lottery_activity</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from lottery_activity where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, start_time, end_time, lotter_type, condition_begin_date, condition_end_date, prize_rule_id, prize_rule_name, people_num, status, raw_add_time, raw_update_time from lottery_activity where (1 = 1)</tt>
	 *
	 *	@param lotteryActivity
	 *	@param limitStart
	 *	@param pageSize
	 *	@param statusList
	 *	@param beginStartDate
	 *	@param endStartDate
	 *	@param beginEndDate
	 *	@param endEndDate
	 *	@return List<LotteryActivityDO>
	 *	@throws DataAccessException
	 */	 
    public List<LotteryActivityDO> findByCondition(LotteryActivityDO lotteryActivity, long limitStart, long pageSize, List statusList, Date beginStartDate, Date endStartDate, Date beginEndDate, Date endEndDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from lottery_activity</tt>
	 *
	 *	@param lotteryActivity
	 *	@param statusList
	 *	@param beginStartDate
	 *	@param endStartDate
	 *	@param beginEndDate
	 *	@param endEndDate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findCountByCondition(LotteryActivityDO lotteryActivity, List statusList, Date beginStartDate, Date endStartDate, Date beginEndDate, Date endEndDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from lottery_activity where (prize_rule_id = ?)</tt>
	 *
	 *	@param prizeRuleId
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByPrizeRuleIdCount(long prizeRuleId) throws DataAccessException;

	/**
	 *  Insert one <tt>LotteryActivityDO</tt> object to DB table <tt>lottery_activity</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into lottery_activity(id,name,start_time,end_time,lotter_type,condition_begin_date,condition_end_date,prize_rule_id,prize_rule_name,people_num,status,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param lotteryActivity
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insertAutotest(LotteryActivityDO lotteryActivity) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, start_time, end_time, lotter_type, condition_begin_date, condition_end_date, prize_rule_id, prize_rule_name, people_num, status, raw_add_time, raw_update_time from lottery_activity where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return LotteryActivityDO
	 *	@throws DataAccessException
	 */	 
    public LotteryActivityDO findByIdAutotest(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>lottery_activity</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from lottery_activity where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByIdAutotest(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>lottery_activity</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, start_time, end_time, lotter_type, condition_begin_date, condition_end_date, prize_rule_id, prize_rule_name, people_num, status, raw_add_time, raw_update_time from lottery_activity where (status = ?)</tt>
	 *
	 *	@param status
	 *	@return LotteryActivityDO
	 *	@throws DataAccessException
	 */	 
    public LotteryActivityDO findByStatusAutotest(String status) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>lottery_activity</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from lottery_activity where (status = ?)</tt>
	 *
	 *	@param status
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByStatusAutotest(String status) throws DataAccessException;

}