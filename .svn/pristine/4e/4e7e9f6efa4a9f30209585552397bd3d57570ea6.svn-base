/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.GuarantorInfoDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.GuarantorInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.GuarantorInfoDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/guarantor_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisGuarantorInfoDAO extends SqlMapClientDaoSupport implements GuarantorInfoDAO {
	/**
	 *  Insert one <tt>GuarantorInfoDO</tt> object to DB table <tt>guarantor_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into guarantor_info(id,guarantor_code,guarantor_name,guarantee_cert_type,guarantee_cert_no,guarantee_cert_valid_time,guarantee_cert_front_path,guarantee_cert_back_path,guarantee_phone,guarantee_occupation,guarantee_address,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param guarantorInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(GuarantorInfoDO guarantorInfo) throws DataAccessException {
    	if (guarantorInfo == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-GUARANTOR-INFO-INSERT", guarantorInfo);

        return guarantorInfo.getId();
    }

	/**
	 *  Update DB table <tt>guarantor_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update guarantor_info set guarantor_code=?, guarantor_name=?, guarantee_cert_type=?, guarantee_cert_no=?, guarantee_cert_valid_time=?, guarantee_cert_front_path=?, guarantee_cert_back_path=?, guarantee_phone=?, guarantee_occupation=?, guarantee_address=? where (id = ?)</tt>
	 *
	 *	@param guarantorInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(GuarantorInfoDO guarantorInfo) throws DataAccessException {
    	if (guarantorInfo == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-GUARANTOR-INFO-UPDATE", guarantorInfo);
    }

	/**
	 *  Query DB table <tt>guarantor_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, guarantor_code, guarantor_name, guarantee_cert_type, guarantee_cert_no, guarantee_cert_valid_time, guarantee_cert_front_path, guarantee_cert_back_path, guarantee_phone, guarantee_occupation, guarantee_address, raw_add_time, raw_update_time from guarantor_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return GuarantorInfoDO
	 *	@throws DataAccessException
	 */	 
    public GuarantorInfoDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (GuarantorInfoDO) getSqlMapClientTemplate().queryForObject("MS-GUARANTOR-INFO-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>guarantor_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from guarantor_info where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-GUARANTOR-INFO-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>guarantor_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, guarantor_code, guarantor_name, guarantee_cert_type, guarantee_cert_no, guarantee_cert_valid_time, guarantee_cert_front_path, guarantee_cert_back_path, guarantee_phone, guarantee_occupation, guarantee_address, raw_add_time, raw_update_time from guarantor_info where (1 = 1)</tt>
	 *
	 *	@param guarantorInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<GuarantorInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<GuarantorInfoDO> findByCondition(GuarantorInfoDO guarantorInfo, long limitStart, long pageSize) throws DataAccessException {
    	if (guarantorInfo == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("guarantorInfo", guarantorInfo);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-GUARANTOR-INFO-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>guarantor_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from guarantor_info where (1 = 1)</tt>
	 *
	 *	@param guarantorInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(GuarantorInfoDO guarantorInfo, long limitStart, long pageSize) throws DataAccessException {
    	if (guarantorInfo == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("guarantorInfo", guarantorInfo);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-GUARANTOR-INFO-FIND-BY-CONDITION-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>guarantor_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from guarantor_info</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException {

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-GUARANTOR-INFO-FIND-ALL-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}