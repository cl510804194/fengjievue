<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table store -->
    <resultMap id="RM-STORE" class="com.yjf.esupplier.dal.dataobject.StoreDO">
        <result property="storeId" column="store_id" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="yjfAccountId" column="yjf_account_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="yjfAccountName" column="yjf_account_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="storeCode" column="store_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="companyName" column="company_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="oftenName" column="often_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessLicenseNum" column="business_license_num" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="legalPerson" column="legal_person" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="legalPersonCardNumber" column="legal_person_card_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certificateDate" column="certificate_date" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="province" column="province" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="city" column="city" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="contry" column="contry" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="address" column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="represent" column="represent" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="settlementType" column="settlement_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rzstatus" column="rzstatus" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="def1" column="def1" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def2" column="def2" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def3" column="def3" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="organizationCode" column="organization_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="taxAuthority" column="tax_authority" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisStoreDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisStoreDAO.insert -->
    <insert id="MS-STORE-INSERT">
        insert /*MS-MICROBANK-STORE-INSERT*/ into store(store_id,yjf_account_id,yjf_account_name,store_code,company_name,often_name,business_license_num,legal_person,mobile,legal_person_card_number,certificate_date,province,city,contry,address,represent,settlement_type,rzstatus,status,raw_add_time,def1,def2,def3,organization_code,tax_authority) values (#storeId#, #yjfAccountId#, #yjfAccountName#, #storeCode#, #companyName#, #oftenName#, #businessLicenseNum#, #legalPerson#, #mobile#, #legalPersonCardNumber#, #certificateDate#, #province#, #city#, #contry#, #address#, #represent#, #settlementType#, #rzstatus#, #status#, #rawAddTime#, #def1#, #def2#, #def3#, #organizationCode#, #taxAuthority#)
			<selectKey  resultClass ="long"  keyProperty ="storeId" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	       	</selectKey>
    </insert>

    <!-- mapped statement for IbatisStoreDAO.update -->
    <update id="MS-STORE-UPDATE">
    <![CDATA[
        update /*MS-MICROBANK-STORE-UPDATE*/ store set yjf_account_id=#yjfAccountId#, yjf_account_name=#yjfAccountName#, store_code=#storeCode#, company_name=#companyName#, often_name=#oftenName#, business_license_num=#businessLicenseNum#, legal_person=#legalPerson#, mobile=#mobile#, legal_person_card_number=#legalPersonCardNumber#, certificate_date=#certificateDate#, province=#province#, city=#city#, contry=#contry#, address=#address#, represent=#represent#, settlement_type=#settlementType#, rzstatus=#rzstatus#, status=#status#, def1=#def1#, def2=#def2#, def3=#def3#, organization_code=#organizationCode#, tax_authority=#taxAuthority# where (store_id = #storeId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisStoreDAO.findById -->
    <select id="MS-STORE-FIND-BY-ID" resultMap="RM-STORE">
    <![CDATA[
        select /*MS-MICROBANK-STORE-FIND-BY-ID*/ store_id, yjf_account_id, yjf_account_name, store_code, company_name, often_name, business_license_num, legal_person, mobile, legal_person_card_number, certificate_date, province, city, contry, address, represent, settlement_type, rzstatus, status, raw_add_time, raw_update_time, def1, def2, def3, organization_code, tax_authority from store where (store_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisStoreDAO.findByAccountId -->
    <select id="MS-STORE-FIND-BY-ACCOUNT-ID" resultMap="RM-STORE">
    <![CDATA[
        select /*MS-MICROBANK-STORE-FIND-BY-ACCOUNT-ID*/ store_id, yjf_account_id, yjf_account_name, store_code, company_name, often_name, business_license_num, legal_person, mobile, legal_person_card_number, certificate_date, province, city, contry, address, represent, settlement_type, rzstatus, status, raw_add_time, raw_update_time, def1, def2, def3, organization_code, tax_authority from store where (yjf_account_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisStoreDAO.deleteById -->
    <delete id="MS-STORE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-MICROBANK-STORE-DELETE-BY-ID*/ from store where (store_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisStoreDAO.findAllCount -->
    <select id="MS-STORE-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-MICROBANK-STORE-FIND-ALL-COUNT*/ COUNT(*) from store
    ]]>
    </select>

    <!-- mapped statement for IbatisStoreDAO.queryList -->
    <select id="MS-STORE-QUERY-LIST" resultMap="RM-STORE">
        SELECT /*MS-MICROBANK-STORE-QUERY-LIST*/  store_id ,yjf_account_id ,yjf_account_name ,store_code ,company_name ,often_name ,business_license_num ,legal_person ,mobile ,legal_person_card_number ,certificate_date ,province ,city ,contry ,address ,represent ,settlement_type ,rzstatus ,status ,raw_add_time ,raw_update_time ,def1 ,def2 ,def3 ,organization_code ,tax_authority  FROM store WHERE 1=1
			
			<dynamic>
				
				<isNotEmpty property="store.storeCode" prepend=" and ">
					<![CDATA[  store_code like #store.storeCode# ]]>
				</isNotEmpty>
			
				<isNotEmpty property="store.oftenName" prepend=" and ">
					<![CDATA[  often_name like #store.oftenName# ]]>
				</isNotEmpty>
				
			</dynamic>
			ORDER BY store_id LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisStoreDAO.queryCount -->
    <select id="MS-STORE-QUERY-COUNT" resultClass="long">
        select /*MS-MICROBANK-STORE-QUERY-COUNT*/  count(*) from store where 1=1
			
			<dynamic>
				<isNotEmpty property="storeCode" prepend=" and ">
					<![CDATA[  store_code like #storeCode# ]]>
				</isNotEmpty>
			
				<isNotEmpty property="oftenName" prepend=" and ">
					<![CDATA[  often_name like #oftenName# ]]>
				</isNotEmpty>
			</dynamic>
    </select>

</sqlMap>
