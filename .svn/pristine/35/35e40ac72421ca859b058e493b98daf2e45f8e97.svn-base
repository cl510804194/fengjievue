/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.ProfitAsignInfoMarketingDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.ProfitAsignInfoMarketingDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.ProfitAsignInfoMarketingDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/profit_asign_info_marketing.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisProfitAsignInfoMarketingDAO extends SqlMapClientDaoSupport implements ProfitAsignInfoMarketingDAO {
	/**
	 *  Insert one <tt>ProfitAsignInfoMarketingDO</tt> object to DB table <tt>profit_asign_info_marketing</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into profit_asign_info_marketing(tbl_base_id,receive_id,distribution_id,distribution_quota,note,raw_add_time,rem1) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param profitAsignInfoMarketing
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(ProfitAsignInfoMarketingDO profitAsignInfoMarketing) throws DataAccessException {
    	if (profitAsignInfoMarketing == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROFIT-ASIGN-INFO-MARKETING-INSERT", profitAsignInfoMarketing);

        return profitAsignInfoMarketing.getTblBaseId();
    }

	/**
	 *  Update DB table <tt>profit_asign_info_marketing</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update profit_asign_info_marketing set receive_id=?, distribution_id=?, distribution_quota=?, note=?, rem1=? where (tbl_base_id = ?)</tt>
	 *
	 *	@param profitAsignInfoMarketing
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProfitAsignInfoMarketingDO profitAsignInfoMarketing) throws DataAccessException {
    	if (profitAsignInfoMarketing == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROFIT-ASIGN-INFO-MARKETING-UPDATE", profitAsignInfoMarketing);
    }

	/**
	 *  Query DB table <tt>profit_asign_info_marketing</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, raw_add_time, raw_update_time, rem1 from profit_asign_info_marketing where (tbl_base_id = ?)</tt>
	 *
	 *	@param tblBaseId
	 *	@return ProfitAsignInfoMarketingDO
	 *	@throws DataAccessException
	 */	 
    public ProfitAsignInfoMarketingDO findById(long tblBaseId) throws DataAccessException {
        Long param = new Long(tblBaseId);

        return (ProfitAsignInfoMarketingDO) getSqlMapClientTemplate().queryForObject("MS-PROFIT-ASIGN-INFO-MARKETING-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>profit_asign_info_marketing</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, raw_add_time, raw_update_time, rem1 from profit_asign_info_marketing where (receive_id = ?)</tt>
	 *
	 *	@param receiveId
	 *	@return ProfitAsignInfoMarketingDO
	 *	@throws DataAccessException
	 */	 
    public ProfitAsignInfoMarketingDO findByReceiveId(long receiveId) throws DataAccessException {
        Long param = new Long(receiveId);

        return (ProfitAsignInfoMarketingDO) getSqlMapClientTemplate().queryForObject("MS-PROFIT-ASIGN-INFO-MARKETING-FIND-BY-RECEIVE-ID", param);

    }

	/**
	 *  Query DB table <tt>profit_asign_info_marketing</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, raw_add_time, raw_update_time, rem1 from profit_asign_info_marketing where (1 = 1)</tt>
	 *
	 *	@param profitAsignInfoMarketing
	 *	@param receiveIds
	 *	@return List<ProfitAsignInfoMarketingDO>
	 *	@throws DataAccessException
	 */	 
    public List<ProfitAsignInfoMarketingDO> findByReceiveIds(ProfitAsignInfoMarketingDO profitAsignInfoMarketing, List receiveIds) throws DataAccessException {
    	if (profitAsignInfoMarketing == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("profitAsignInfoMarketing", profitAsignInfoMarketing);
        param.put("receiveIds", receiveIds);

        return getSqlMapClientTemplate().queryForList("MS-PROFIT-ASIGN-INFO-MARKETING-FIND-BY-RECEIVE-IDS", param);

    }

	/**
	 *  Delete records from DB table <tt>profit_asign_info_marketing</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from profit_asign_info_marketing where (tbl_base_id = ?)</tt>
	 *
	 *	@param tblBaseId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long tblBaseId) throws DataAccessException {
        Long param = new Long(tblBaseId);

        return getSqlMapClientTemplate().delete("MS-PROFIT-ASIGN-INFO-MARKETING-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>profit_asign_info_marketing</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from profit_asign_info_marketing</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-PROFIT-ASIGN-INFO-MARKETING-FIND-ALL-COUNT", null);

    }

	/**
	 *  Query DB table <tt>profit_asign_info_marketing</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, raw_add_time, raw_update_time, rem1 from profit_asign_info_marketing where (receive_id = ?)</tt>
	 *
	 *	@param receiveId
	 *	@return ProfitAsignInfoMarketingDO
	 *	@throws DataAccessException
	 */	 
    public ProfitAsignInfoMarketingDO findByReceiveIdAutotest(long receiveId) throws DataAccessException {
        Long param = new Long(receiveId);

        return (ProfitAsignInfoMarketingDO) getSqlMapClientTemplate().queryForObject("MS-PROFIT-ASIGN-INFO-MARKETING-FIND-BY-RECEIVE-ID-AUTOTEST", param);

    }

	/**
	 *  Insert one <tt>ProfitAsignInfoMarketingDO</tt> object to DB table <tt>profit_asign_info_marketing</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into profit_asign_info_marketing(tbl_base_id,receive_id,distribution_id,distribution_quota,note,raw_add_time,rem1) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param profitAsignInfoMarketing
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insertAutotest(ProfitAsignInfoMarketingDO profitAsignInfoMarketing) throws DataAccessException {
    	if (profitAsignInfoMarketing == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROFIT-ASIGN-INFO-MARKETING-INSERT-AUTOTEST", profitAsignInfoMarketing);

        return profitAsignInfoMarketing.getTblBaseId();
    }

	/**
	 *  Delete records from DB table <tt>profit_asign_info_marketing</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from profit_asign_info_marketing where (receive_id = ?)</tt>
	 *
	 *	@param receiveId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByReceiveIdAutotest(long receiveId) throws DataAccessException {
        Long param = new Long(receiveId);

        return getSqlMapClientTemplate().delete("MS-PROFIT-ASIGN-INFO-MARKETING-DELETE-BY-RECEIVE-ID-AUTOTEST", param);
    }

}