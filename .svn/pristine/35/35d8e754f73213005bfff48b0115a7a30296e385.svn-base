/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.UserAccountDataDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>user_account_data</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/user_account_data.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface UserAccountDataDAO {
	/**
	 *  Insert one <tt>UserAccountDataDO</tt> object to DB table <tt>user_account_data</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into user_account_data(user_id,user_integral,user_integral_grand_total,user_coupon_count,user_coupon_count_grand_total,user_coupon_amount,user_coupon_amount_grand_total,user_gift_amount,user_gift_amount_grand_total,user_gift_amount_count,user_gift_amount_grand_count,user_gift_amount_cash,user_gift_amount_cash_grand_total,user_growth_value,user_balance,user_trade_amount,user_recharge_amount,user_withdraw_amount,user_freeze_amount,user_payed_amount,user_trade_day,last_trade_day,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param userAccountData
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(UserAccountDataDO userAccountData) throws DataAccessException;

	/**
	 *  Update DB table <tt>user_account_data</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update user_account_data set user_integral=?, user_integral_grand_total=?, user_coupon_count=?, user_coupon_count_grand_total=?, user_coupon_amount=?, user_coupon_amount_grand_total=?, user_gift_amount=?, user_gift_amount_grand_total=?, user_gift_amount_count=?, user_gift_amount_grand_count=?, user_gift_amount_cash=?, user_gift_amount_cash_grand_total=?, user_growth_value=?, user_balance=?, user_trade_amount=?, user_recharge_amount=?, user_withdraw_amount=?, user_freeze_amount=?, user_payed_amount=?, user_trade_day=?, last_trade_day=? where (user_id = ?)</tt>
	 *
	 *	@param userAccountData
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(UserAccountDataDO userAccountData) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_account_data</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from user_account_data where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return UserAccountDataDO
	 *	@throws DataAccessException
	 */	 
    public UserAccountDataDO findById(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_account_data</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from user_account_data where (user_id = ?) for update</tt>
	 *
	 *	@param userId
	 *	@return UserAccountDataDO
	 *	@throws DataAccessException
	 */	 
    public UserAccountDataDO findByIdForUpdate(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_account_data</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from user_account_data</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>user_account_data</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from user_account_data where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteUserAccountDataByUserIdAutoTest(long userId) throws DataAccessException;

}