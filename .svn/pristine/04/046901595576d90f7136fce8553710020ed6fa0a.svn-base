/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.UserWeixinDO;
import org.springframework.dao.DataAccessException;

/**
 * A dao interface provides methods to access database table <tt>user_weixin</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/user_weixin.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */

public interface UserWeixinDAO {
	/**
	 *  Insert one <tt>UserWeixinDO</tt> object to DB table <tt>user_weixin</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into user_weixin(id,user_id,open_id,raw_add_time) values (?, ?, ?, ?)</tt>
	 *
	 *	@param userWeixin
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(UserWeixinDO userWeixin) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_weixin</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, open_id, raw_add_time, raw_update_time from user_weixin where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return UserWeixinDO
	 *	@throws DataAccessException
	 */	 
    public UserWeixinDO findById(long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_weixin</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, open_id, raw_add_time, raw_update_time from user_weixin where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return UserWeixinDO
	 *	@throws DataAccessException
	 */	 
    public UserWeixinDO findByUserId(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_weixin</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, open_id, raw_add_time, raw_update_time from user_weixin where (open_id = ?)</tt>
	 *
	 *	@param openId
	 *	@return UserWeixinDO
	 *	@throws DataAccessException
	 */	 
    public UserWeixinDO findByOpenId(String openId) throws DataAccessException;

	/**
	 *  Update DB table <tt>user_weixin</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update user_weixin set user_id=?, open_id=? where (id = ?)</tt>
	 *
	 *	@param userWeixin
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateById(UserWeixinDO userWeixin) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>user_weixin</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from user_weixin where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>user_weixin</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from user_weixin where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByUserId(long userId) throws DataAccessException;

}