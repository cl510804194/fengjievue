/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.ProfitAsignInfoDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.ProfitAsignInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.ProfitAsignInfoDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/profit_asign_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings("unchecked")

public class IbatisProfitAsignInfoDAO extends SqlMapClientDaoSupport implements ProfitAsignInfoDAO {
	/**
	 *  Insert one <tt>ProfitAsignInfoDO</tt> object to DB table <tt>profit_asign_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into profit_asign_info(tbl_base_id,receive_id,distribution_id,distribution_quota,note,add_time,modify_time,rem1) values (?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param profitAsignInfo
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insert(ProfitAsignInfoDO profitAsignInfo) throws DataAccessException {
    	if (profitAsignInfo == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PROFIT-ASIGN-INFO-INSERT", profitAsignInfo);

        return profitAsignInfo.getTblBaseId();
    }

	/**
	 *  Update DB table <tt>profit_asign_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update profit_asign_info set receive_id=?, distribution_id=?, distribution_quota=?, note=?, add_time=?, modify_time=?, rem1=? where (tbl_base_id = ?)</tt>
	 *
	 *	@param profitAsignInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(ProfitAsignInfoDO profitAsignInfo) throws DataAccessException {
    	if (profitAsignInfo == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-PROFIT-ASIGN-INFO-UPDATE", profitAsignInfo);
    }

	/**
	 *  Query DB table <tt>profit_asign_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, add_time, modify_time, rem1 from profit_asign_info where (tbl_base_id = ?)</tt>
	 *
	 *	@param tblBaseId
	 *	@return ProfitAsignInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProfitAsignInfoDO findById(String tblBaseId) throws DataAccessException {

        return (ProfitAsignInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROFIT-ASIGN-INFO-FIND-BY-ID", tblBaseId);

    }

	/**
	 *  Query DB table <tt>profit_asign_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, add_time, modify_time, rem1 from profit_asign_info where (receive_id = ?)</tt>
	 *
	 *	@param receiveId
	 *	@return ProfitAsignInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProfitAsignInfoDO findByReceiveId(long receiveId) throws DataAccessException {
        Long param = new Long(receiveId);

        return (ProfitAsignInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROFIT-ASIGN-INFO-FIND-BY-RECEIVE-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>profit_asign_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from profit_asign_info where (tbl_base_id = ?)</tt>
	 *
	 *	@param tblBaseId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(String tblBaseId) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-PROFIT-ASIGN-INFO-DELETE-BY-ID", tblBaseId);
    }

	/**
	 *  Query DB table <tt>profit_asign_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from profit_asign_info</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-PROFIT-ASIGN-INFO-FIND-ALL-COUNT", null);

    }

	/**
	 *  Query DB table <tt>profit_asign_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select tbl_base_id, receive_id, distribution_id, distribution_quota, note, add_time, modify_time, rem1 from profit_asign_info where (receive_id = ?)</tt>
	 *
	 *	@param receiveId
	 *	@return ProfitAsignInfoDO
	 *	@throws DataAccessException
	 */	 
    public ProfitAsignInfoDO findByReceiveIdAutotest(long receiveId) throws DataAccessException {
        Long param = new Long(receiveId);

        return (ProfitAsignInfoDO) getSqlMapClientTemplate().queryForObject("MS-PROFIT-ASIGN-INFO-FIND-BY-RECEIVE-ID-AUTOTEST", param);

    }

}