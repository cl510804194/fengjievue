/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.RefundOrderInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>refund_order_info</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/refund_order_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface RefundOrderInfoDAO {
	/**
	 *  Insert one <tt>RefundOrderInfoDO</tt> object to DB table <tt>refund_order_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into refund_order_info(refund_id,order_item_id,order_id,product_id,product_name,product_vary,price,quantity,old_quantity,pic_path,buyer_user_id,buyer_real_name,buyer_user_name,refund_type,refund_amount,refund_quantity,supplier_id,supplier_name,supplier_nickname,resorts_business_id,resorts_business_name,resorts_business_real_name,check_pass_date,sale_type_o2o,sale_type_b2c,refund_reason,refund_desc,apply_date,check_advice,logistics_companies,logistics_no,status,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param refundOrderInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(RefundOrderInfoDO refundOrderInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>refund_order_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from refund_order_info where (refund_id = ?)</tt>
	 *
	 *	@param refundId
	 *	@return RefundOrderInfoDO
	 *	@throws DataAccessException
	 */	 
    public RefundOrderInfoDO findById(long refundId) throws DataAccessException;

	/**
	 *  Query DB table <tt>refund_order_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from refund_order_info where (refund_id = ?)</tt>
	 *
	 *	@param refundId
	 *	@return RefundOrderInfoDO
	 *	@throws DataAccessException
	 */	 
    public RefundOrderInfoDO findByIdForUpdate(long refundId) throws DataAccessException;

	/**
	 *  Query DB table <tt>refund_order_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from refund_order_info where (order_id = ?)</tt>
	 *
	 *	@param orderId
	 *	@return RefundOrderInfoDO
	 *	@throws DataAccessException
	 */	 
    public RefundOrderInfoDO findByOrderId(long orderId) throws DataAccessException;

	/**
	 *  Query DB table <tt>refund_order_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from refund_order_info where (order_item_id = ?)</tt>
	 *
	 *	@param orderItemId
	 *	@return RefundOrderInfoDO
	 *	@throws DataAccessException
	 */	 
    public RefundOrderInfoDO findByOrderItemId(long orderItemId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>refund_order_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from refund_order_info where (refund_id = ?)</tt>
	 *
	 *	@param refundId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long refundId) throws DataAccessException;

	/**
	 *  Update DB table <tt>refund_order_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update refund_order_info set order_item_id=?, order_id=?, product_id=?, product_name=?, product_vary=?, price=?, quantity=?, old_quantity=?, pic_path=?, buyer_user_id=?, buyer_real_name=?, buyer_user_name=?, refund_type=?, refund_amount=?, refund_quantity=?, supplier_id=?, supplier_name=?, supplier_nickname=?, resorts_business_id=?, resorts_business_name=?, resorts_business_real_name=?, check_pass_date=?, sale_type_o2o=?, sale_type_b2c=?, refund_reason=?, refund_desc=?, apply_date=?, check_advice=?, logistics_companies=?, logistics_no=?, status=? where (refund_id = ?)</tt>
	 *
	 *	@param refundOrderInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(RefundOrderInfoDO refundOrderInfo) throws DataAccessException;

	/**
	 *  Query DB table <tt>refund_order_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from refund_order_info where (1 = 1)</tt>
	 *
	 *	@param refundOrderInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@param beginDate
	 *	@param endDate
	 *	@param beginCheckDate
	 *	@param endCheckDate
	 *	@param orderBy
	 *	@param supplierIds
	 *	@param refundTypes
	 *	@return List<RefundOrderInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<RefundOrderInfoDO> findCondition(RefundOrderInfoDO refundOrderInfo, long limitStart, long pageSize, Date beginDate, Date endDate, Date beginCheckDate, Date endCheckDate, String orderBy, List supplierIds, List refundTypes) throws DataAccessException;

	/**
	 *  Query DB table <tt>refund_order_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from refund_order_info where (1 = 1)</tt>
	 *
	 *	@param refundOrderInfo
	 *	@param beginDate
	 *	@param endDate
	 *	@param beginCheckDate
	 *	@param endCheckDate
	 *	@param supplierIds
	 *	@param refundTypes
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findConditionCount(RefundOrderInfoDO refundOrderInfo, Date beginDate, Date endDate, Date beginCheckDate, Date endCheckDate, List supplierIds, List refundTypes) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>refund_order_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from refund_order_info where (order_id = ?)</tt>
	 *
	 *	@param orderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByOrderIdAutotest(long orderId) throws DataAccessException;

}