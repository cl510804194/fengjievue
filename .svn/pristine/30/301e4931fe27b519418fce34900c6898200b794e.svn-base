/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.TblLogisticDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>tbl_logistics</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/tbl_logistics.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface TblLogisticDAO {
	/**
	 *  Insert one <tt>TblLogisticDO</tt> object to DB table <tt>tbl_logistics</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into tbl_logistics(id,name,official_site,query_site,address,post_code,phones,email,link_man,create_man,create_time,status,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tblLogistic
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(TblLogisticDO tblLogistic) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_logistics</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, official_site, query_site, address, post_code, phones, email, link_man, create_man, create_time, status, raw_add_time, raw_update_time from tbl_logistics where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return TblLogisticDO
	 *	@throws DataAccessException
	 */	 
    public TblLogisticDO findById(long id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>tbl_logistics</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_logistics where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException;

	/**
	 *  Update DB table <tt>tbl_logistics</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update tbl_logistics set name=?, official_site=?, query_site=?, address=?, post_code=?, phones=?, email=?, link_man=?, create_man=?, create_time=?, status=? where (id = ?)</tt>
	 *
	 *	@param tblLogistic
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TblLogisticDO tblLogistic) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_logistics</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, official_site, query_site, address, post_code, phones, email, link_man, create_man, create_time, status, raw_add_time, raw_update_time from tbl_logistics where (status = ?)</tt>
	 *
	 *	@param status
	 *	@return List<TblLogisticDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblLogisticDO> findByStatus(String status) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_logistics</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, name, official_site, query_site, address, post_code, phones, email, link_man, create_man, create_time, status, raw_add_time, raw_update_time from tbl_logistics</tt>
	 *
	 *	@return List<TblLogisticDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblLogisticDO> findByAll() throws DataAccessException;

}