<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table delivery_person -->
    <resultMap id="RM-DELIVERY-PERSON" class="com.yjf.esupplier.dal.dataobject.DeliveryPersonDO">
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="belongTo" column="belong_to" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="level" column="level" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="serviceType" column="service_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisDeliveryPersonDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisDeliveryPersonDAO.insert -->
    <insert id="MS-DELIVERY-PERSON-INSERT">
    <![CDATA[
        insert /*MS-ESUPPLIER-DELIVERY-PERSON-INSERT*/ into delivery_person(user_id,user_name,real_name,nick_name,belong_to,status,level,service_type,raw_add_time) values (#userId#, #userName#, #realName#, #nickName#, #belongTo#, #status#, #level#, #serviceType#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisDeliveryPersonDAO.update -->
    <update id="MS-DELIVERY-PERSON-UPDATE">
    <![CDATA[
        update /*MS-ESUPPLIER-DELIVERY-PERSON-UPDATE*/ delivery_person set user_name=#userName#, real_name=#realName#, nick_name=#nickName#, belong_to=#belongTo#, status=#status#, level=#level#, service_type=#serviceType#, raw_update_time=#rawUpdateTime# where (user_id = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisDeliveryPersonDAO.findById -->
    <select id="MS-DELIVERY-PERSON-FIND-BY-ID" resultMap="RM-DELIVERY-PERSON">
    <![CDATA[
        select /*MS-ESUPPLIER-DELIVERY-PERSON-FIND-BY-ID*/ * from delivery_person where (user_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisDeliveryPersonDAO.findByIdForUpdate -->
    <select id="MS-DELIVERY-PERSON-FIND-BY-ID-FOR-UPDATE" resultMap="RM-DELIVERY-PERSON">
    <![CDATA[
        select /*MS-ESUPPLIER-DELIVERY-PERSON-FIND-BY-ID-FOR-UPDATE*/ * from delivery_person where (user_id = #value#) for update
    ]]>
    </select>

    <!-- mapped statement for IbatisDeliveryPersonDAO.findByCanUse -->
    <select id="MS-DELIVERY-PERSON-FIND-BY-CAN-USE" resultMap="RM-DELIVERY-PERSON">
        SELECT /*MS-ESUPPLIER-DELIVERY-PERSON-FIND-BY-CAN-USE*/ * from delivery_person where status=#status# and belong_to=#belongTo#   ORDER BY rand() LIMIT 0,20
    </select>

    <!-- mapped statement for IbatisDeliveryPersonDAO.deleteById -->
    <delete id="MS-DELIVERY-PERSON-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-DELIVERY-PERSON-DELETE-BY-ID*/ from delivery_person where (user_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisDeliveryPersonDAO.findAllCount -->
    <select id="MS-DELIVERY-PERSON-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-ESUPPLIER-DELIVERY-PERSON-FIND-ALL-COUNT*/ COUNT(*) from delivery_person
    ]]>
    </select>

    <!-- mapped statement for IbatisDeliveryPersonDAO.findByCondition -->
    <select id="MS-DELIVERY-PERSON-FIND-BY-CONDITION" resultMap="RM-DELIVERY-PERSON">
        SELECT /*MS-ESUPPLIER-DELIVERY-PERSON-FIND-BY-CONDITION*/  * FROM delivery_person  where 1=1
	        <dynamic>
	            <isNotEmpty property="deliveryPerson.userName" prepend=" and ">
	                user_name = #deliveryPerson.userName#
	            </isNotEmpty>
	            <isNotEmpty property="deliveryPerson.nickName" prepend=" and ">
	                nick_name  like concat('%',#deliveryPerson.nickName#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="deliveryPerson.realName" prepend=" and ">
	                real_name  like concat('%',#deliveryPerson.realName#,'%')
	            </isNotEmpty>
	            <isNotEmpty property="deliveryPerson.status" prepend=" and ">
	                status = #deliveryPerson.status#
	            </isNotEmpty>
	             <isGreaterThan property="deliveryPerson.belongTo"  compareValue="0" prepend=" and ">
	                belong_to = #deliveryPerson.belongTo#
	            </isGreaterThan>
	             <isNotEmpty property="serviceTypeList" prepend=" and ">
					<iterate property="serviceTypeList" open="(" close=")" conjunction="or">
						concat(',',#serviceTypeList[]#,',')   like concat('%,',service_type,',%')
					</iterate>
				</isNotEmpty>
	        </dynamic>
               ORDER BY raw_add_time LIMIT #limitStart#,#pageSize#
    </select>

    <!-- mapped statement for IbatisDeliveryPersonDAO.findByConditionCount -->
    <select id="MS-DELIVERY-PERSON-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-ESUPPLIER-DELIVERY-PERSON-FIND-BY-CONDITION-COUNT*/  count(*)  FROM delivery_person  
				 WHERE 1 =1
	            <dynamic>
	            <isNotEmpty property="deliveryPerson.nickName" prepend=" and ">
	                nick_name like concat('%',#deliveryPerson.nickName#,'%')
	            </isNotEmpty>
				    <isNotEmpty property="deliveryPerson.userName" prepend=" and ">
	                user_name = #deliveryPerson.userName#
		            </isNotEmpty>
		            <isNotEmpty property="deliveryPerson.realName" prepend=" and ">
		                real_name like concat('%',#deliveryPerson.realName#,'%')
		            </isNotEmpty>
		            <isNotEmpty property="deliveryPerson.status" prepend=" and ">
		                status = #deliveryPerson.status#
		            </isNotEmpty>
		            <isGreaterThan property="deliveryPerson.belongTo"  compareValue="0" prepend=" and ">
	               	 	belong_to = #deliveryPerson.belongTo#
	            	</isGreaterThan>
	             <isNotEmpty property="serviceTypeList" prepend=" and ">
					<iterate property="serviceTypeList" open="(" close=")" conjunction="or">
						concat(',',#serviceTypeList[]#,',')   like concat('%,',service_type,',%')
					</iterate>
				</isNotEmpty>
	       	 </dynamic>
    </select>

</sqlMap>
