/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.PrizeRuleDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>prize_rule_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/prize_rule_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface PrizeRuleDetailDAO {
	/**
	 *  Insert one <tt>PrizeRuleDetailDO</tt> object to DB table <tt>prize_rule_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into prize_rule_detail(prize_rule_detail_id,prize_rule_id,seq_num,awards,prize_name,prize_type,prize_num,prize_amount,prize_image,probability,description,memo,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param prizeRuleDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(PrizeRuleDetailDO prizeRuleDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>prize_rule_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update prize_rule_detail set prize_rule_id=?, seq_num=?, awards=?, prize_name=?, prize_type=?, prize_num=?, prize_amount=?, prize_image=?, probability=?, description=?, memo=? where (prize_rule_detail_id = ?)</tt>
	 *
	 *	@param prizeRuleDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(PrizeRuleDetailDO prizeRuleDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>prize_rule_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select prize_rule_detail_id, prize_rule_id, seq_num, awards, prize_name, prize_type, prize_num, prize_amount, prize_image, probability, description, memo, raw_add_time, raw_update_time from prize_rule_detail where (prize_rule_detail_id = ?)</tt>
	 *
	 *	@param prizeRuleDetailId
	 *	@return PrizeRuleDetailDO
	 *	@throws DataAccessException
	 */	 
    public PrizeRuleDetailDO findById(long prizeRuleDetailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>prize_rule_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select prize_rule_detail_id, prize_rule_id, seq_num, awards, prize_name, prize_type, prize_num, prize_amount, prize_image, probability, description, memo, raw_add_time, raw_update_time from prize_rule_detail where (prize_rule_id = ?)</tt>
	 *
	 *	@param prizeRuleId
	 *	@return List<PrizeRuleDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<PrizeRuleDetailDO> findByPrizeRuleId(long prizeRuleId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>prize_rule_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from prize_rule_detail where (prize_rule_detail_id = ?)</tt>
	 *
	 *	@param prizeRuleDetailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long prizeRuleDetailId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>prize_rule_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from prize_rule_detail where (prize_rule_id = ?)</tt>
	 *
	 *	@param prizeRuleId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByPrizeRuleId(long prizeRuleId) throws DataAccessException;

	/**
	 *  Query DB table <tt>prize_rule_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select prize_rule_detail_id, prize_rule_id, seq_num, awards, prize_name, prize_type, prize_num, prize_amount, prize_image, probability, description, memo, raw_add_time, raw_update_time from prize_rule_detail where (1 = 1)</tt>
	 *
	 *	@param prizeRuleDetail
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<PrizeRuleDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<PrizeRuleDetailDO> findByCondition(PrizeRuleDetailDO prizeRuleDetail, long limitStart, long pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>prize_rule_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from prize_rule_detail</tt>
	 *
	 *	@param prizeRuleDetail
	 *	@param limitStart
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findCountByCondition(PrizeRuleDetailDO prizeRuleDetail, long limitStart) throws DataAccessException;

	/**
	 *  Query DB table <tt>prize_rule_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select prize_rule_detail_id, prize_rule_id, seq_num, awards, prize_name, prize_type, prize_num, prize_amount, prize_image, probability, description, memo, raw_add_time, raw_update_time from prize_rule_detail where (prize_rule_id = ?)</tt>
	 *
	 *	@param prizeRuleId
	 *	@return List<PrizeRuleDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<PrizeRuleDetailDO> findByPrizeRuleIdAutotest(long prizeRuleId) throws DataAccessException;

}