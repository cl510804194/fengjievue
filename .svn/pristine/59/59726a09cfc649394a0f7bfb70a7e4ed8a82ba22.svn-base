/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.TblPopUserDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>tbl_pop_user</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/tbl_pop_user.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface TblPopUserDAO {
	/**
	 *  Insert one <tt>TblPopUserDO</tt> object to DB table <tt>tbl_pop_user</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into tbl_pop_user(pop_user_id,pop_id,type,user_id,raw_add_time) values (?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tblPopUser
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(TblPopUserDO tblPopUser) throws DataAccessException;

	/**
	 *  Update DB table <tt>tbl_pop_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update tbl_pop_user set pop_id=?, user_id=?, type=? where (pop_user_id = ?)</tt>
	 *
	 *	@param tblPopUser
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TblPopUserDO tblPopUser) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select pop_user_id, pop_id, type, user_id, raw_add_time, raw_update_time from tbl_pop_user where (pop_user_id = ?)</tt>
	 *
	 *	@param popUserId
	 *	@return TblPopUserDO
	 *	@throws DataAccessException
	 */	 
    public TblPopUserDO findById(long popUserId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select pop_user_id, pop_id, type, user_id, raw_add_time, raw_update_time from tbl_pop_user where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return List<TblPopUserDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblPopUserDO> findListByUserId(long userId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>tbl_pop_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_pop_user where (pop_user_id = ?)</tt>
	 *
	 *	@param popUserId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long popUserId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>tbl_pop_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_pop_user where ((user_id = ?) AND (pop_id = ?) AND (type = ?))</tt>
	 *
	 *	@param userId
	 *	@param popId
	 *	@param type
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByPopAndUser(long userId, long popId, String type) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>tbl_pop_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_pop_user where ((user_id = ?) AND (type = ?))</tt>
	 *
	 *	@param userId
	 *	@param type
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteBySupplierAndUser(long userId, String type) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_pop_user</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select u.* from pop_info t, tbl_pop_user u where (t.base_id = u.pop_id)</tt>
	 *
	 *	@param tblPopUser
	 *	@param limitStart
	 *	@param pageSize
	 *	@param popName
	 *	@param beginDate
	 *	@param endDate
	 *	@return List<TblPopUserDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblPopUserDO> findByUserId(TblPopUserDO tblPopUser, long limitStart, long pageSize, String popName, Date beginDate, Date endDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from pop_info t, tbl_pop_user u where (t.base_id = u.pop_id)</tt>
	 *
	 *	@param tblPopUser
	 *	@param popName
	 *	@param beginDate
	 *	@param endDate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByUserIdCount(TblPopUserDO tblPopUser, String popName, Date beginDate, Date endDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select u.* from pop_info t, tbl_pop_user u where (t.base_id = u.pop_id)</tt>
	 *
	 *	@param tblPopUser
	 *	@param popIds
	 *	@param types
	 *	@param userId
	 *	@return List<TblPopUserDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblPopUserDO> findInfoByTypes(TblPopUserDO tblPopUser, List popIds, List types, long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_pop_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from pop_info t, tbl_pop_user u where (t.base_id = u.pop_id)</tt>
	 *
	 *	@param tblPopUser
	 *	@param popIds
	 *	@param types
	 *	@param userId
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findInfoByTypesCount(TblPopUserDO tblPopUser, List popIds, List types, long userId) throws DataAccessException;

}