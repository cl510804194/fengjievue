<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table personal_info -->
    <resultMap id="RM-PERSONAL-INFO" class="com.yjf.esupplier.dal.dataobject.PersonalInfoDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="userBaseId" column="user_base_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certNo" column="cert_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="businessPeriod" column="business_period" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certFrontPath" column="cert_front_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="certBackPath" column="cert_back_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankOpenName" column="bank_open_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankCardNo" column="bank_card_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankType" column="bank_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankKey" column="bank_key" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankProvince" column="bank_province" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankCity" column="bank_city" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="bankAddress" column="bank_address" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" javaType="int" jdbcType="INT" nullValue="0"/>
        <result property="referees" column="referees" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="customerSource" column="customer_source" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPersonalInfoDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPersonalInfoDAO.insert -->
    <insert id="MS-PERSONAL-INFO-INSERT">
    <![CDATA[
        insert /*MS-ESUPPLIER-PERSONAL-INFO-INSERT*/ into personal_info(id,user_base_id,real_name,cert_no,business_period,cert_front_path,cert_back_path,bank_open_name,bank_card_no,bank_type,bank_key,bank_province,bank_city,bank_address,gender,referees,customer_source) values (#id#, #userBaseId#, #realName#, #certNo#, #businessPeriod#, #certFrontPath#, #certBackPath#, #bankOpenName#, #bankCardNo#, #bankType#, #bankKey#, #bankProvince#, #bankCity#, #bankAddress#, #gender#, #referees#, #customerSource#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisPersonalInfoDAO.update -->
    <update id="MS-PERSONAL-INFO-UPDATE">
    <![CDATA[
        update /*MS-ESUPPLIER-PERSONAL-INFO-UPDATE*/ personal_info set real_name=#realName#, cert_no=#certNo#, business_period=#businessPeriod#, cert_front_path=#certFrontPath#, cert_back_path=#certBackPath#, bank_open_name=#bankOpenName#, bank_card_no=#bankCardNo#, bank_type=#bankType#, bank_key=#bankKey#, bank_province=#bankProvince#, bank_city=#bankCity#, bank_address=#bankAddress#, gender=#gender#, referees=#referees#, customer_source=#customerSource#, raw_add_time=#rawAddTime#, raw_update_time=#rawUpdateTime# where (user_base_id = #userBaseId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPersonalInfoDAO.findById -->
    <select id="MS-PERSONAL-INFO-FIND-BY-ID" resultMap="RM-PERSONAL-INFO">
    <![CDATA[
        select /*MS-ESUPPLIER-PERSONAL-INFO-FIND-BY-ID*/ id, user_base_id, real_name, cert_no, business_period, cert_front_path, cert_back_path, bank_open_name, bank_card_no, bank_type, bank_key, bank_province, bank_city, bank_address, gender, referees, customer_source, raw_add_time, raw_update_time from personal_info where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalInfoDAO.findByUserBaseId -->
    <select id="MS-PERSONAL-INFO-FIND-BY-USER-BASE-ID" resultMap="RM-PERSONAL-INFO">
    <![CDATA[
        select /*MS-ESUPPLIER-PERSONAL-INFO-FIND-BY-USER-BASE-ID*/ id, user_base_id, real_name, cert_no, business_period, cert_front_path, cert_back_path, bank_open_name, bank_card_no, bank_type, bank_key, bank_province, bank_city, bank_address, gender, referees, customer_source, raw_add_time, raw_update_time from personal_info where (user_base_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalInfoDAO.findByCondition -->
    <select id="MS-PERSONAL-INFO-FIND-BY-CONDITION" resultMap="RM-PERSONAL-INFO">
    <![CDATA[
        select /*MS-ESUPPLIER-PERSONAL-INFO-FIND-BY-CONDITION*/ id, user_base_id, real_name, cert_no, business_period, cert_front_path, cert_back_path, bank_open_name, bank_card_no, bank_type, bank_key, bank_province, bank_city, bank_address, gender, referees, customer_source, raw_add_time, raw_update_time from personal_info where (1 = 1)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalInfoDAO.findByConditionCount -->
    <select id="MS-PERSONAL-INFO-FIND-BY-CONDITION-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-ESUPPLIER-PERSONAL-INFO-FIND-BY-CONDITION-COUNT*/ COUNT(*) from personal_info where (1 = 1)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalInfoDAO.deleteById -->
    <delete id="MS-PERSONAL-INFO-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-PERSONAL-INFO-DELETE-BY-ID*/ from personal_info where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPersonalInfoDAO.findAllCount -->
    <select id="MS-PERSONAL-INFO-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-ESUPPLIER-PERSONAL-INFO-FIND-ALL-COUNT*/ COUNT(*) from personal_info
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalInfoDAO.deleteByUserBaseIdAutoTest -->
    <delete id="MS-PERSONAL-INFO-DELETE-BY-USER-BASE-ID-AUTO-TEST">
    <![CDATA[
        delete /*MS-ESUPPLIER-PERSONAL-INFO-DELETE-BY-USER-BASE-ID-AUTO-TEST*/ from personal_info where (user_base_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPersonalInfoDAO.findByRealNameAutoTest -->
    <select id="MS-PERSONAL-INFO-FIND-BY-REAL-NAME-AUTO-TEST" resultMap="RM-PERSONAL-INFO">
    <![CDATA[
        select /*MS-ESUPPLIER-PERSONAL-INFO-FIND-BY-REAL-NAME-AUTO-TEST*/ * from personal_info where (real_name = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPersonalInfoDAO.deleteByRealNameAutoTest -->
    <delete id="MS-PERSONAL-INFO-DELETE-BY-REAL-NAME-AUTO-TEST">
    <![CDATA[
        delete /*MS-ESUPPLIER-PERSONAL-INFO-DELETE-BY-REAL-NAME-AUTO-TEST*/ from personal_info where (real_name = #value#)
    ]]>
    </delete>

</sqlMap>
