/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.UserInterestDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>user_interest</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/user_interest.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface UserInterestDAO {
	/**
	 *  Insert one <tt>UserInterestDO</tt> object to DB table <tt>user_interest</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into user_interest(user_interest_id,user_interest_type,user_level,relation_value1,relation_value2,relation_value3,raw_add_time) values (?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param userInterest
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(UserInterestDO userInterest) throws DataAccessException;

	/**
	 *  Update DB table <tt>user_interest</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update user_interest set user_interest_type=?, user_level=?, relation_value1=?, relation_value2=?, relation_value3=? where (user_interest_id = ?)</tt>
	 *
	 *	@param userInterest
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(UserInterestDO userInterest) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_interest</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_interest_id, user_interest_type, user_level, relation_value1, relation_value2, relation_value3, raw_update_time, raw_add_time from user_interest where (user_interest_id = ?)</tt>
	 *
	 *	@param userInterestId
	 *	@return UserInterestDO
	 *	@throws DataAccessException
	 */	 
    public UserInterestDO findById(long userInterestId) throws DataAccessException;

	/**
	 *  Query DB table <tt>user_interest</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_interest_id, user_interest_type, user_level, relation_value1, relation_value2, relation_value3, raw_update_time, raw_add_time from user_interest where (user_level = ?)</tt>
	 *
	 *	@param userLevel
	 *	@return List<UserInterestDO>
	 *	@throws DataAccessException
	 */	 
    public List<UserInterestDO> findByUserLevel(String userLevel) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>user_interest</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from user_interest where (user_interest_id = ?)</tt>
	 *
	 *	@param userInterestId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long userInterestId) throws DataAccessException;

}