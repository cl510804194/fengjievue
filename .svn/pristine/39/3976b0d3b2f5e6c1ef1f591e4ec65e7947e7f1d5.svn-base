/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.GiftMoneyTemplateDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.GiftMoneyTemplateDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.GiftMoneyTemplateDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/gift_money_template.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisGiftMoneyTemplateDAO extends SqlMapClientDaoSupport implements GiftMoneyTemplateDAO {
	/**
	 *  Insert one <tt>GiftMoneyTemplateDO</tt> object to DB table <tt>gift_money_template</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into gift_money_template(template_id,template_name,increase,status,raw_add_time,raw_update_time) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param giftMoneyTemplate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(GiftMoneyTemplateDO giftMoneyTemplate) throws DataAccessException {
    	if (giftMoneyTemplate == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-GIFT-MONEY-TEMPLATE-INSERT", giftMoneyTemplate);

        return giftMoneyTemplate.getTemplateId();
    }

	/**
	 *  Update DB table <tt>gift_money_template</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update gift_money_template set template_name=?, increase=?, raw_update_time=? where (template_id = ?)</tt>
	 *
	 *	@param giftMoneyTemplate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(GiftMoneyTemplateDO giftMoneyTemplate) throws DataAccessException {
    	if (giftMoneyTemplate == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-GIFT-MONEY-TEMPLATE-UPDATE", giftMoneyTemplate);
    }

	/**
	 *  Query DB table <tt>gift_money_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select template_id, template_name, increase, status, raw_add_time, raw_update_time from gift_money_template where (template_id = ?)</tt>
	 *
	 *	@param templateId
	 *	@return GiftMoneyTemplateDO
	 *	@throws DataAccessException
	 */	 
    public GiftMoneyTemplateDO findById(long templateId) throws DataAccessException {
        Long param = new Long(templateId);

        return (GiftMoneyTemplateDO) getSqlMapClientTemplate().queryForObject("MS-GIFT-MONEY-TEMPLATE-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>gift_money_template</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from gift_money_template where (template_id = ?)</tt>
	 *
	 *	@param templateId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long templateId) throws DataAccessException {
        Long param = new Long(templateId);

        return getSqlMapClientTemplate().delete("MS-GIFT-MONEY-TEMPLATE-DELETE-BY-ID", param);
    }

	/**
	 *  Update DB table <tt>gift_money_template</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update gift_money_template set status=? where (template_id = ?)</tt>
	 *
	 *	@param status
	 *	@param templateId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changeStatus(String status, long templateId) throws DataAccessException {
        Map param = new HashMap();

        param.put("status", status);
        param.put("templateId", new Long(templateId));

        return getSqlMapClientTemplate().update("MS-GIFT-MONEY-TEMPLATE-CHANGE-STATUS", param);
    }

	/**
	 *  Query DB table <tt>gift_money_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select template_id, template_name, increase, status, raw_add_time, raw_update_time from gift_money_template</tt>
	 *
	 *	@param giftMoneyTemplate
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<GiftMoneyTemplateDO>
	 *	@throws DataAccessException
	 */	 
    public List<GiftMoneyTemplateDO> giftMoneyTemplateListByCondition(GiftMoneyTemplateDO giftMoneyTemplate, long limitStart, long pageSize) throws DataAccessException {
    	if (giftMoneyTemplate == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("giftMoneyTemplate", giftMoneyTemplate);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-GIFT-MONEY-TEMPLATE-GIFT-MONEY-TEMPLATE-LIST-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>gift_money_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(template_id) from gift_money_template</tt>
	 *
	 *	@param giftMoneyTemplate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long giftMoneyTemplateCountListByCondition(GiftMoneyTemplateDO giftMoneyTemplate) throws DataAccessException {
    	if (giftMoneyTemplate == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-GIFT-MONEY-TEMPLATE-GIFT-MONEY-TEMPLATE-COUNT-LIST-BY-CONDITION", giftMoneyTemplate);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Insert one <tt>GiftMoneyTemplateDO</tt> object to DB table <tt>gift_money_template</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into gift_money_template(template_id,template_name,increase,status,raw_add_time,raw_update_time) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param giftMoneyTemplate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insertAutotest(GiftMoneyTemplateDO giftMoneyTemplate) throws DataAccessException {
    	if (giftMoneyTemplate == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-GIFT-MONEY-TEMPLATE-INSERT-AUTOTEST", giftMoneyTemplate);

        return giftMoneyTemplate.getTemplateId();
    }

	/**
	 *  Query DB table <tt>gift_money_template</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select template_id, template_name, increase, status, raw_add_time, raw_update_time from gift_money_template where (template_name = ?)</tt>
	 *
	 *	@param templateName
	 *	@return GiftMoneyTemplateDO
	 *	@throws DataAccessException
	 */	 
    public GiftMoneyTemplateDO findByNameAutotest(String templateName) throws DataAccessException {

        return (GiftMoneyTemplateDO) getSqlMapClientTemplate().queryForObject("MS-GIFT-MONEY-TEMPLATE-FIND-BY-NAME-AUTOTEST", templateName);

    }

	/**
	 *  Delete records from DB table <tt>gift_money_template</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from gift_money_template where (template_name = ?)</tt>
	 *
	 *	@param templateName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByNameAutotest(String templateName) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-GIFT-MONEY-TEMPLATE-DELETE-BY-NAME-AUTOTEST", templateName);
    }

}