/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.TblHotelLongDetailDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.TblHotelLongDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.TblHotelLongDetailDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/tbl_hotel_long_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisTblHotelLongDetailDAO extends SqlMapClientDaoSupport implements TblHotelLongDetailDAO {
	/**
	 *  Insert one <tt>TblHotelLongDetailDO</tt> object to DB table <tt>tbl_hotel_long_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into tbl_hotel_long_detail(id,set_id,days,discount,amount,raw_add_time) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tblHotelLongDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(TblHotelLongDetailDO tblHotelLongDetail) throws DataAccessException {
    	if (tblHotelLongDetail == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-TBL-HOTEL-LONG-DETAIL-INSERT", tblHotelLongDetail);

        return tblHotelLongDetail.getId();
    }

	/**
	 *  Update DB table <tt>tbl_hotel_long_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update tbl_hotel_long_detail set set_id=?, days=?, discount=?, amount=? where (id = ?)</tt>
	 *
	 *	@param tblHotelLongDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TblHotelLongDetailDO tblHotelLongDetail) throws DataAccessException {
    	if (tblHotelLongDetail == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-TBL-HOTEL-LONG-DETAIL-UPDATE", tblHotelLongDetail);
    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, set_id, days, discount, amount, raw_add_time, raw_update_time from tbl_hotel_long_detail where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return TblHotelLongDetailDO
	 *	@throws DataAccessException
	 */	 
    public TblHotelLongDetailDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (TblHotelLongDetailDO) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-DETAIL-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, set_id, days, discount, amount, raw_add_time, raw_update_time from tbl_hotel_long_detail where (set_id = ?)</tt>
	 *
	 *	@param setId
	 *	@return List<TblHotelLongDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblHotelLongDetailDO> findBySetId(long setId) throws DataAccessException {
        Long param = new Long(setId);

        return getSqlMapClientTemplate().queryForList("MS-TBL-HOTEL-LONG-DETAIL-FIND-BY-SET-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>tbl_hotel_long_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_hotel_long_detail where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-TBL-HOTEL-LONG-DETAIL-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>tbl_hotel_long_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_hotel_long_detail where (set_id = ?)</tt>
	 *
	 *	@param setId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteBySetId(long setId) throws DataAccessException {
        Long param = new Long(setId);

        return getSqlMapClientTemplate().delete("MS-TBL-HOTEL-LONG-DETAIL-DELETE-BY-SET-ID", param);
    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_hotel_long_detail</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException {

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-DETAIL-FIND-ALL-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_hotel_long_detail</tt>
	 *
	 *	@return List<TblHotelLongDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblHotelLongDetailDO> findAllDiscount() throws DataAccessException {

        return getSqlMapClientTemplate().queryForList("MS-TBL-HOTEL-LONG-DETAIL-FIND-ALL-DISCOUNT", null);

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_hotel_long_detail where (1 = 1)</tt>
	 *
	 *	@param limitStart
	 *	@param pageSize
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(long limitStart, long pageSize) throws DataAccessException {
        Map param = new HashMap();

        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-TBL-HOTEL-LONG-DETAIL-FIND-BY-CONDITION-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>tbl_hotel_long_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from tbl_hotel_long_detail where (1 = 1)</tt>
	 *
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<TblHotelLongDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblHotelLongDetailDO> findByCondition(long limitStart, long pageSize) throws DataAccessException {
        Map param = new HashMap();

        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-TBL-HOTEL-LONG-DETAIL-FIND-BY-CONDITION", param);

    }

}