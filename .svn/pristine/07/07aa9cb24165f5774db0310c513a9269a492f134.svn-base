/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.UserWeixinDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.UserWeixinDO;
import org.springframework.dao.DataAccessException;

/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.UserWeixinDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/user_weixin.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 

public class IbatisUserWeixinDAO extends SqlMapClientDaoSupport implements UserWeixinDAO {
	/**
	 *  Insert one <tt>UserWeixinDO</tt> object to DB table <tt>user_weixin</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into user_weixin(id,user_id,open_id,raw_add_time) values (?, ?, ?, ?)</tt>
	 *
	 *	@param userWeixin
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(UserWeixinDO userWeixin) throws DataAccessException {
    	if (userWeixin == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-USER-WEIXIN-INSERT", userWeixin);

        return userWeixin.getId();
    }

	/**
	 *  Query DB table <tt>user_weixin</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, open_id, raw_add_time, raw_update_time from user_weixin where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return UserWeixinDO
	 *	@throws DataAccessException
	 */	 
    public UserWeixinDO findById(long id) throws DataAccessException {
        Long param = new Long(id);

        return (UserWeixinDO) getSqlMapClientTemplate().queryForObject("MS-USER-WEIXIN-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>user_weixin</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, open_id, raw_add_time, raw_update_time from user_weixin where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return UserWeixinDO
	 *	@throws DataAccessException
	 */	 
    public UserWeixinDO findByUserId(long userId) throws DataAccessException {
        Long param = new Long(userId);

        return (UserWeixinDO) getSqlMapClientTemplate().queryForObject("MS-USER-WEIXIN-FIND-BY-USER-ID", param);

    }

	/**
	 *  Query DB table <tt>user_weixin</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, open_id, raw_add_time, raw_update_time from user_weixin where (open_id = ?)</tt>
	 *
	 *	@param openId
	 *	@return UserWeixinDO
	 *	@throws DataAccessException
	 */	 
    public UserWeixinDO findByOpenId(String openId) throws DataAccessException {

        return (UserWeixinDO) getSqlMapClientTemplate().queryForObject("MS-USER-WEIXIN-FIND-BY-OPEN-ID", openId);

    }

	/**
	 *  Update DB table <tt>user_weixin</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update user_weixin set user_id=?, open_id=? where (id = ?)</tt>
	 *
	 *	@param userWeixin
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateById(UserWeixinDO userWeixin) throws DataAccessException {
    	if (userWeixin == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-USER-WEIXIN-UPDATE-BY-ID", userWeixin);
    }

	/**
	 *  Delete records from DB table <tt>user_weixin</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from user_weixin where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long id) throws DataAccessException {
        Long param = new Long(id);

        return getSqlMapClientTemplate().delete("MS-USER-WEIXIN-DELETE-BY-ID", param);
    }

	/**
	 *  Delete records from DB table <tt>user_weixin</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from user_weixin where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByUserId(long userId) throws DataAccessException {
        Long param = new Long(userId);

        return getSqlMapClientTemplate().delete("MS-USER-WEIXIN-DELETE-BY-USER-ID", param);
    }

}