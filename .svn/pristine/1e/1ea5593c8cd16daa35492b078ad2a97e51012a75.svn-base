/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.CoopsInfoDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.CoopsInfoDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.CoopsInfoDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/coops_info.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisCoopsInfoDAO extends SqlMapClientDaoSupport implements CoopsInfoDAO {
	/**
	 *  Insert one <tt>CoopsInfoDO</tt> object to DB table <tt>coops_info</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into coops_info(coo_id,coo_name,coo_herf,pic_name,pic_url,pic_phy_url,add_time,sort_no) values (?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param coopsInfo
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(CoopsInfoDO coopsInfo) throws DataAccessException {
    	if (coopsInfo == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-COOPS-INFO-INSERT", coopsInfo);

        return coopsInfo.getCooId();
    }

	/**
	 *  Update DB table <tt>coops_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update coops_info set coo_id=?, coo_name=?, coo_herf=?, pic_name=?, pic_url=?, pic_phy_url=?, add_time=?, sort_no=? where (coo_id = ?)</tt>
	 *
	 *	@param coopsInfo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(CoopsInfoDO coopsInfo) throws DataAccessException {
    	if (coopsInfo == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-COOPS-INFO-UPDATE", coopsInfo);
    }

	/**
	 *  Query DB table <tt>coops_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select coo_id, coo_name, coo_herf, pic_name, pic_url, pic_phy_url, add_time, sort_no from coops_info where (coo_id = ?)</tt>
	 *
	 *	@param cooId
	 *	@return CoopsInfoDO
	 *	@throws DataAccessException
	 */	 
    public CoopsInfoDO findById(long cooId) throws DataAccessException {
        Long param = new Long(cooId);

        return (CoopsInfoDO) getSqlMapClientTemplate().queryForObject("MS-COOPS-INFO-FIND-BY-ID", param);

    }

	/**
	 *  Delete records from DB table <tt>coops_info</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from coops_info where (coo_id = ?)</tt>
	 *
	 *	@param cooId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long cooId) throws DataAccessException {
        Long param = new Long(cooId);

        return getSqlMapClientTemplate().delete("MS-COOPS-INFO-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>coops_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select coo_id, coo_name, coo_herf, pic_name, pic_url, pic_phy_url, add_time, sort_no from coops_info where (coo_id = ?)</tt>
	 *
	 *	@param coopsInfo
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<CoopsInfoDO>
	 *	@throws DataAccessException
	 */	 
    public List<CoopsInfoDO> findByCondition(CoopsInfoDO coopsInfo, long limitStart, long pageSize) throws DataAccessException {
    	if (coopsInfo == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("coopsInfo", coopsInfo);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));

        return getSqlMapClientTemplate().queryForList("MS-COOPS-INFO-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>coops_info</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from coops_info where (coo_id = ?)</tt>
	 *
	 *	@param coopsInfo
	 *	@param statusList
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findCountByCondition(CoopsInfoDO coopsInfo) throws DataAccessException {
    	if (coopsInfo == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("coopsInfo", coopsInfo);

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-COOPS-INFO-FIND-COUNT-BY-CONDITION", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

}