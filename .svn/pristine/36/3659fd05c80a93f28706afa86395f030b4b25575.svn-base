/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.DivisionDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import com.yjf.common.lang.util.money.Money;
import java.util.Date;
import java.util.HashMap;

/**
 * A dao interface provides methods to access database table <tt>division_detail</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/division_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface DivisionDetailDAO {
	/**
	 *  Insert one <tt>DivisionDetailDO</tt> object to DB table <tt>division_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into division_detail(detail_id,business_code,user_id,user_name,real_name,trade_id,amount,division_status,division_date,trade_detail_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param divisionDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(DivisionDetailDO divisionDetail) throws DataAccessException;

	/**
	 *  Update DB table <tt>division_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update division_detail set business_code=?, user_id=?, user_name=?, real_name=?, trade_id=?, amount=?, division_status=?, division_date=?, trade_detail_id=? where (detail_id = ?)</tt>
	 *
	 *	@param divisionDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(DivisionDetailDO divisionDetail) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return DivisionDetailDO
	 *	@throws DataAccessException
	 */	 
    public DivisionDetailDO findById(long detailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail where (detail_id = ?) for update</tt>
	 *
	 *	@param detailId
	 *	@return DivisionDetailDO
	 *	@throws DataAccessException
	 */	 
    public DivisionDetailDO findByIdForUpdate(long detailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail where (division_status = ?)</tt>
	 *
	 *	@param divisionStatus
	 *	@return List<DivisionDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<DivisionDetailDO> findByStatus(boolean divisionStatus) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select sum(amount) amount from division_detail where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return Money
	 *	@throws DataAccessException
	 */	 
    public Money findByUserIdAllAmount(long userId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>division_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from division_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long detailId) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from division_detail</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail</tt>
	 *
	 *	@param divisionDetail
	 *	@param limitStart
	 *	@param pageSize
	 *	@param startDate
	 *	@param endDate
	 *	@return List<DivisionDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<DivisionDetailDO> findByCondition(DivisionDetailDO divisionDetail, long limitStart, long pageSize, Date startDate, Date endDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) totalcount, sum(amount) amount from division_detail</tt>
	 *
	 *	@param divisionDetail
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public HashMap findByCountCondition(DivisionDetailDO divisionDetail, Date startDate, Date endDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from division_detail where (trade_id = ?)</tt>
	 *
	 *	@param tradeId
	 *	@return List<DivisionDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<DivisionDetailDO> findByTradeIdAutotest(long tradeId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>division_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from division_detail where (trade_id = ?)</tt>
	 *
	 *	@param tradeId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByTradeIdAutotest(long tradeId) throws DataAccessException;

}