<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table hotels_stock -->
    <resultMap id="RM-HOTELS-STOCK" class="com.yjf.esupplier.dal.dataobject.HotelsStockDO">
        <result property="id" column="id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="productId" column="product_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="productName" column="product_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="supplierId" column="supplier_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="priceDate" column="price_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="productPrice" column="product_price" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="marketPrice" column="market_price" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="morningRoomPrice" column="morning_room_price" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="specialRoomPrice" column="special_room_price" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="execPrice" column="exec_price" javaType="com.yjf.common.lang.util.money.Money" jdbcType="BIGINT"/>
        <result property="inStock" column="in_stock" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="availableStock" column="available_stock" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ordainNum" column="ordain_num" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="morningRoomTotalNum" column="morning_room_total_num" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="morningRoomNum" column="morning_room_num" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="specialRoomTotalNum" column="special_room_total_num" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="specialRoomNum" column="special_room_num" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="longRoomNum" column="long_room_num" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisHotelsStockDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisHotelsStockDAO.insert -->
    <insert id="MS-HOTELS-STOCK-INSERT">
        INSERT /*MS-ESUPPLIER-HOTELS-STOCK-INSERT*/ INTO hotels_stock(id,product_id,product_name,supplier_id,price_date,product_price,market_price,exec_price,morning_room_price,special_room_price,in_stock,available_stock,ordain_num,morning_room_total_num,morning_room_num,special_room_total_num,special_room_num,long_room_num,status,raw_add_time)
             VALUES (#id#,#productId#,#productName#,#supplierId#,#priceDate#,#productPrice#,#marketPrice#,#execPrice#,#morningRoomPrice#,#specialRoomPrice#,#inStock#,#availableStock#,#ordainNum#,#morningRoomTotalNum#,#morningRoomNum#,#specialRoomTotalNum#,#specialRoomNum#,#longRoomNum#,#status#,#rawAddTime#)
	       <selectKey  resultClass ="long"  keyProperty ="id" >
	          		 SELECT LAST_INSERT_ID() AS ID
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisHotelsStockDAO.findById -->
    <select id="MS-HOTELS-STOCK-FIND-BY-ID" resultMap="RM-HOTELS-STOCK">
    <![CDATA[
        select /*MS-ESUPPLIER-HOTELS-STOCK-FIND-BY-ID*/ * from hotels_stock where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.findByCondition -->
    <select id="MS-HOTELS-STOCK-FIND-BY-CONDITION" resultMap="RM-HOTELS-STOCK">
        SELECT /*MS-ESUPPLIER-HOTELS-STOCK-FIND-BY-CONDITION*/  *  FROM hotels_stock  h INNER JOIN tbl_product t on h.product_id=t.product_id
              <dynamic prepend="where">
	            <isGreaterThan property="hotelsStock.supplierId"  compareValue="0" prepend=" and ">
				h.supplier_id = #hotelsStock.supplierId#
				</isGreaterThan>
				<isNotEmpty property="productStatus" prepend=" and ">
				 t.product_status = #productStatus#
				</isNotEmpty>
				<isNotEmpty property="hotelsStock.priceDate" prepend=" and ">
				h.price_date = #hotelsStock.priceDate#
				</isNotEmpty>
				<isGreaterThan property="hotelsStock.productId"  compareValue="0" prepend=" and ">
				h.product_id = #hotelsStock.productId#
				</isGreaterThan>
	            <isGreaterThan property="hotelsStock.ordainNum"  compareValue="0" prepend=" and ">
	               h.ordain_num>=#ordainNum#
	            </isGreaterThan>
				<isNotEmpty property="beginDate" prepend=" and ">
				<![CDATA[ h.price_date>=#beginDate# ]]>
				</isNotEmpty>
				<isNotEmpty property="endDate" prepend=" and ">
				<![CDATA[ h.price_date<#endDate# ]]>
				</isNotEmpty>
	            <isGreaterThan property="leftStock"  compareValue="0" prepend=" and ">
	               (h.available_stock-h.ordain_num)>=#leftStock#
	            </isGreaterThan>
	            <isGreaterThan property="normalStock"  compareValue="0" prepend=" and ">
	               (h.available_stock-h.ordain_num-(h.special_room_total_num-h.special_room_num)-(h.morning_room_total_num-h.morning_room_num))>=#normalStock#
	            </isGreaterThan>
	            <isGreaterThan property="leftSpeStock"  compareValue="0" prepend=" and ">
	               (h.special_room_total_num-h.special_room_num)>=#leftSpeStock#
	            </isGreaterThan>
	            <isGreaterThan property="leftMorStock"  compareValue="0" prepend=" and ">
	               (h.morning_room_total_num-h.morning_room_num)>=#leftMorStock#
	            </isGreaterThan>
				<isNotEmpty property="hotelsStock.status" prepend=" and ">
				h.status = #hotelsStock.status#
				</isNotEmpty>
				  </dynamic>
	           ORDER by h.price_date desc,h.product_Id,h.id
        <isGreaterThan property="limitStart" compareValue="-1">
            LIMIT #limitStart#,#pageSize#;
        </isGreaterThan>
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.findByConditionCount -->
    <select id="MS-HOTELS-STOCK-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-ESUPPLIER-HOTELS-STOCK-FIND-BY-CONDITION-COUNT*/  count(*)   FROM hotels_stock h INNER JOIN tbl_product t on h.product_id=t.product_id
	            <dynamic prepend="where">
	            <isGreaterThan property="hotelsStock.supplierId"  compareValue="0" prepend=" and ">
				h.supplier_id = #hotelsStock.supplierId#
				</isGreaterThan>
				<isNotEmpty property="productStatus" prepend=" and ">
				 t.product_status = #productStatus#
				</isNotEmpty>
				<isNotEmpty property="hotelsStock.priceDate" prepend=" and ">
				h.price_date = #hotelsStock.priceDate#
				</isNotEmpty>
				<isGreaterThan property="hotelsStock.productId"  compareValue="0" prepend=" and ">
				h.product_id = #hotelsStock.productId#
				</isGreaterThan>
	            <isGreaterThan property="hotelsStock.ordainNum"  compareValue="0" prepend=" and ">
	               h.ordain_num>=#ordainNum#
	            </isGreaterThan>
				<isNotEmpty property="beginDate" prepend=" and ">
				<![CDATA[ h.price_date>=#beginDate# ]]>
				</isNotEmpty>
				<isNotEmpty property="endDate" prepend=" and ">
				<![CDATA[ h.price_date<#endDate# ]]>
				</isNotEmpty>
	            <isGreaterThan property="leftStock"  compareValue="0" prepend=" and ">
	               (h.available_stock-h.ordain_num)>=#leftStock#
	            </isGreaterThan>
	            <isGreaterThan property="normalStock"  compareValue="0" prepend=" and ">
	               (h.available_stock-h.ordain_num-(h.special_room_total_num-h.special_room_num)-(h.morning_room_total_num-h.morning_room_num))>=#normalStock#
	            </isGreaterThan>
	            <isGreaterThan property="leftSpeStock"  compareValue="0" prepend=" and ">
	               (h.special_room_total_num-h.special_room_num)>=#leftSpeStock#
	            </isGreaterThan>
	            <isGreaterThan property="leftMorStock"  compareValue="0" prepend=" and ">
	               (h.morning_room_total_num-h.morning_room_num)>=#leftMorStock#
	            </isGreaterThan>
				<isNotEmpty property="hotelsStock.status" prepend=" and ">
				h.status = #hotelsStock.status#
				</isNotEmpty>
				  </dynamic>
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.findByPidAndDates -->
    <select id="MS-HOTELS-STOCK-FIND-BY-PID-AND-DATES" resultMap="RM-HOTELS-STOCK">
        SELECT /*MS-ESUPPLIER-HOTELS-STOCK-FIND-BY-PID-AND-DATES*/  *  FROM hotels_stock
	            <dynamic prepend="where">
				<isNotEmpty property="idList" prepend=" and ">
				product_Id in
				<iterate  property="idList" open="(" close=")" conjunction=",">
					#idList[]#
				</iterate>
				</isNotEmpty>
				<isNotEmpty property="beginDate" prepend=" and ">
				<![CDATA[ price_date>=#beginDate# ]]>
				</isNotEmpty>
				<isNotEmpty property="endDate" prepend=" and ">
				<![CDATA[ price_date<#endDate# ]]>
				</isNotEmpty>
				<isNotEmpty property="status" prepend=" and ">
				status = #status#
				</isNotEmpty>
				  </dynamic>
	           ORDER by price_date desc,product_Id,id
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.findByIdForUpdate -->
    <select id="MS-HOTELS-STOCK-FIND-BY-ID-FOR-UPDATE" resultMap="RM-HOTELS-STOCK">
    <![CDATA[
        select /*MS-ESUPPLIER-HOTELS-STOCK-FIND-BY-ID-FOR-UPDATE*/ * from hotels_stock where (id = #value#) for update
    ]]>
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.findByPidAndDate -->
    <select id="MS-HOTELS-STOCK-FIND-BY-PID-AND-DATE" resultMap="RM-HOTELS-STOCK">
    <![CDATA[
        select /*MS-ESUPPLIER-HOTELS-STOCK-FIND-BY-PID-AND-DATE*/ * from hotels_stock where ((product_id = #productId#) AND (price_date = #priceDate#))
    ]]>
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.updateProductName -->
    <update id="MS-HOTELS-STOCK-UPDATE-PRODUCT-NAME">
    <![CDATA[
        update /*MS-ESUPPLIER-HOTELS-STOCK-UPDATE-PRODUCT-NAME*/ hotels_stock set product_name=#productName# where (product_id = #productId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisHotelsStockDAO.deleteById -->
    <delete id="MS-HOTELS-STOCK-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-HOTELS-STOCK-DELETE-BY-ID*/ from hotels_stock where (id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisHotelsStockDAO.deleteByProductId -->
    <delete id="MS-HOTELS-STOCK-DELETE-BY-PRODUCT-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-HOTELS-STOCK-DELETE-BY-PRODUCT-ID*/ from hotels_stock where (product_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisHotelsStockDAO.deleteByInit -->
    <delete id="MS-HOTELS-STOCK-DELETE-BY-INIT">
    <![CDATA[
        delete /*MS-ESUPPLIER-HOTELS-STOCK-DELETE-BY-INIT*/ from hotels_stock where ((product_id = #productId#) AND (price_date >= #priceDate#) AND (price_date < #priceDate2#) AND (status = 'ON') AND (ordain_num = 0))
    ]]>
    </delete>

    <!-- mapped statement for IbatisHotelsStockDAO.deleteByPIdAndDates -->
    <delete id="MS-HOTELS-STOCK-DELETE-BY-P-ID-AND-DATES">
    <![CDATA[
        delete /*MS-ESUPPLIER-HOTELS-STOCK-DELETE-BY-P-ID-AND-DATES*/ from hotels_stock where ((product_id = #productId#) AND (price_date >= #priceDate#) AND (price_date < #priceDate2#))
    ]]>
    </delete>

    <!-- mapped statement for IbatisHotelsStockDAO.findPeriod -->
    <select id="MS-HOTELS-STOCK-FIND-PERIOD" resultMap="RM-HOTELS-STOCK">
    <![CDATA[
        select /*MS-ESUPPLIER-HOTELS-STOCK-FIND-PERIOD*/ 0 id, NULL price_date, 0 morning_room_price, 0 special_room_price, 0 morning_room_num, NULL raw_add_time, NULL raw_update_time, product_id, product_name, supplier_id, avg(product_price) product_price, avg(market_price) market_price, avg(exec_price) exec_price, min(in_stock) in_stock, min(available_stock) available_stock, max(ordain_num) ordain_num, min(special_room_total_num) special_room_total_num, max(special_room_num) special_room_num, max(long_room_num) long_room_num from hotels_stock where ((product_id = #productId#) AND (price_date >= #priceDate#) AND (price_date < #priceDate2#) AND (status = #status#)) group by product_id, product_name, supplier_id
    ]]>
    </select>

    <!-- mapped statement for IbatisHotelsStockDAO.update -->
    <update id="MS-HOTELS-STOCK-UPDATE">
    <![CDATA[
        update /*MS-ESUPPLIER-HOTELS-STOCK-UPDATE*/ hotels_stock set product_id=#productId#, product_name=#productName#, supplier_id=#supplierId#, price_date=#priceDate#, product_price=#productPrice.cent#, market_price=#marketPrice.cent#, exec_price=#execPrice.cent#, morning_room_price=#morningRoomPrice.cent#, special_room_price=#specialRoomPrice.cent#, in_stock=#inStock#, available_stock=#availableStock#, ordain_num=#ordainNum#, morning_room_total_num=#morningRoomTotalNum#, morning_room_num=#morningRoomNum#, special_room_total_num=#specialRoomTotalNum#, special_room_num=#specialRoomNum#, long_room_num=#longRoomNum#, status=#status# where (id = #id#)
    ]]>
    </update>

</sqlMap>
