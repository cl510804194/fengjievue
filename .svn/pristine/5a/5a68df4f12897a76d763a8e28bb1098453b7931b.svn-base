/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.custom.daointerface;

// auto generated imports
import java.util.List;
import java.util.Map;

import com.yjf.esupplier.dal.custom.dataobject.vo.PersonalInfoVO;
import com.yjf.esupplier.dal.custom.dataobject.vo.UserInfoVO;
import com.yjf.esupplier.dal.dataobject.UserBaseInfoDO;

/**
 * A dao interface provides methods to access database table <tt>user_base</tt>.
 * 
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access
 * Layer) code generation utility specially developed for <tt>paygw</tt>
 * project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be
 * OVERWRITTEN by someone else. To modify the file, you should go to directory
 * <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding
 * configuration file (<tt>tables/user_base.xml</tt>). Modify the configuration
 * file according to your needs, then run <tt>specialmer-dalgen</tt> to generate
 * this file.
 * 
 * @author peigen
 */

public interface UserBaseInfoQueryDAO {
	
	/**
	 * 查询个人列表
	 * 
	 * @param condition
	 * @return
	 */
	public List<PersonalInfoVO> commonQueryPersonalInfo(Map<String, Object> condition);
	
	/**
	 * 查询个人&机构用户列表
	 * 
	 * @param condition
	 * @return
	 */
	public List<UserInfoVO> commonQueryUserVoInfo(Map<String, Object> condition);
	
	/**
	 * 查询个人&机构用户数量
	 * 
	 * @param condition
	 * @return
	 */
	public long commonQueryUserVoInfoCount(Map<String, Object> condition);
	
	public List<PersonalInfoVO> commonQueryPersonalInfoDistinct(Map<String, Object> condition);
	
	/**
	 * 查询个人列表
	 * 
	 * @param condition
	 * @return
	 */
	public long commonQueryPersonalInfoCount(Map<String, Object> condition);
	
	public long commonQueryPersonalInfoDistinctCount(Map<String, Object> condition);
	
	/**
	 * 查询下级用户数量
	 * 
	 * @param condition
	 * @return
	 */
	public long selectUserChildrenQueryCount(Map<String, Object> condition);
	
	/**
	 * 查询下级用户列表
	 * 
	 * @param condition
	 * @return
	 */
	public List<PersonalInfoVO> selectUserChildrenQuery(Map<String, Object> condition);
	
	/**
	 * 查询下级用户数量（不限制个人用户）
	 * 
	 * @param condition
	 * @return
	 */
	public long selectAllUserChildrenQueryCount(Map<String, Object> condition);
	
	/**
	 * 查询下级用户列表（不限制个人用户）
	 * 
	 * @param condition
	 * @return
	 */
	public List<PersonalInfoVO> selectAllUserChildrenQuery(Map<String, Object> condition);
	
	public List<PersonalInfoVO> selectAllUserChildrenQueryFjd(Map<String, Object> condition);
	
	/**
	 * 查询指定经纪人下 投资人/二级经纪人 MS-USER-INFO-QUERY-ALL-BROKER-CHILDREN, brokerId 必传
	 */
	public List<UserBaseInfoDO> queryAllBrokerChildren(Map<String, Object> condition);
	
	/**
	 * 查询指定经纪人下 投资人/二级经纪人数量 MS-USER-INFO-QUERY-ALL-BROKER-CHILDREN-COUNT,
	 * brokerId 必传
	 */
	public long queryAllBrokerChildrenCount(Map<String, Object> condition);
	
	/**
	 * 查询指定经纪人下 投资人 MS-USER-INFO-QUERY-ALL-BROKER-CHILDREN, brokerId 必传
	 */
	public List<UserBaseInfoDO> queryAllBrokerChildrenInvestor(Map<String, Object> condition);
	
	/**
	 * 查询指定经纪人下 投资人数量 MS-USER-INFO-QUERY-ALL-BROKER-CHILDREN-COUNT, brokerId 必传
	 */
	public long queryAllBrokerChildrenInvestorCount(Map<String, Object> condition);
	
	/**
	 * 查询指定营销机构下 经纪人/二级经纪人/投资人 MS-USER-INFO-QUERY-ALL-MARKETING-CHILDREN,
	 * marketingId 必传
	 */
	public List<UserBaseInfoDO> queryAllMarketingChildren(Map<String, Object> condition);
	
	/**
	 * 查询指定营销机构下 经纪人/二级经纪人/投资人数量
	 * MS-USER-INFO-QUERY-ALL-MARKETING-CHILDREN-COUNT, marketingId 必传
	 */
	public long queryAllMarketingChildrenCount(Map<String, Object> condition);
	
	/**
	 * 查询指定营销机构下 经纪人 MS-USER-INFO-QUERY-ALL-MARKETING-CHILDREN-BORKER,
	 * marketingId 必传
	 */
	public List<UserBaseInfoDO> queryAllMarketingChildrenBorker(Map<String, Object> condition);
	
	/**
	 * 查询指定营销机构下 经纪人 MS-USER-INFO-QUERY-ALL-MARKETING-CHILDREN-BORKER-COUNT,
	 * marketingId 必传
	 */
	public long queryAllMarketingChildrenBorkerCount(Map<String, Object> condition);
	
	public long selectUserCertNoAndRole(Map<String, Object> condition);
	
	/**
	 * 获取该条件下的用户数量
	 * @param condition
	 * @return
	 */
	public long queryChildrenCountByCondition(Map<String, Object> condition);
	
	/**
	 * 获取该条件下的用户信息
	 * @param condition
	 * @return
	 */
	public List<UserBaseInfoDO> queryChildrenListByCondition(Map<String, Object> condition);
	
	/**
	 * 统计信息查询条数
	 * @param conditions
	 * @return
	 */
	public long queryUserInfoCountByParams(Map<String, Object> conditions);
	
	/**
	 * 统计信息查询列表
	 * @param conditions
	 * @return
	 */
	public List<UserBaseInfoDO> queryUserInfoListByParams(Map<String, Object> conditions);
}