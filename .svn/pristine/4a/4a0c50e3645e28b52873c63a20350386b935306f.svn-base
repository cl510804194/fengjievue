<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table points_rule -->
    <resultMap id="RM-POINTS-RULE" class="com.yjf.esupplier.dal.dataobject.PointsRuleDO">
        <result property="pointsRuleId" column="points_rule_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ruleName" column="rule_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="startTime" column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="ruleType" column="rule_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="valueType" column="value_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="state" column="state" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="pointValue" column="point_value" javaType="double" jdbcType="DECIMAL" nullValue="0"/>
        <result property="pointsValid" column="points_valid" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="validityType" column="validity_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def1" column="def1" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def2" column="def2" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="def3" column="def3" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPointsRuleDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPointsRuleDAO.insert -->
    <insert id="MS-POINTS-RULE-INSERT">
        insert /*MS-ESUPPLIER-POINTS-RULE-INSERT*/  into points_rule(points_rule_id,rule_name,start_time,end_time,rule_type,value_type,state,point_value,points_valid,validity_type,def1,def2,def3,raw_add_time) values (#pointsRuleId#, #ruleName#, #startTime#, #endTime#, #ruleType#, #valueType#, #state#, #pointValue#,#pointsValid#,#validityType#, #def1#, #def2#, #def3#, #rawAddTime#)
	       <selectKey  resultClass ="long"  keyProperty ="pointsRuleId" >   
	          		 SELECT LAST_INSERT_ID() AS ID 
	      	</selectKey>
    </insert>

    <!-- mapped statement for IbatisPointsRuleDAO.update -->
    <update id="MS-POINTS-RULE-UPDATE">
    <![CDATA[
        update /*MS-ESUPPLIER-POINTS-RULE-UPDATE*/ points_rule set rule_name=#ruleName#, start_time=#startTime#, end_time=#endTime#, rule_type=#ruleType#, value_type=#valueType#, state=#state#, point_value=#pointValue#, points_valid=#pointsValid#, validity_type=#validityType#, def1=#def1#, def2=#def2#, def3=#def3# where (points_rule_id = #pointsRuleId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPointsRuleDAO.findById -->
    <select id="MS-POINTS-RULE-FIND-BY-ID" resultMap="RM-POINTS-RULE">
    <![CDATA[
        select /*MS-ESUPPLIER-POINTS-RULE-FIND-BY-ID*/ * from points_rule where (points_rule_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPointsRuleDAO.deleteById -->
    <delete id="MS-POINTS-RULE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-POINTS-RULE-DELETE-BY-ID*/ from points_rule where (points_rule_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisPointsRuleDAO.queryList -->
    <select id="MS-POINTS-RULE-QUERY-LIST" resultMap="RM-POINTS-RULE">
        SELECT /*MS-ESUPPLIER-POINTS-RULE-QUERY-LIST*/  *  FROM points_rule WHERE 1=1
			<dynamic>
				<isGreaterThan property="pointsRule.pointsRuleId" compareValue="0"  prepend=" and ">
					<![CDATA[ points_rule_id = #pointsRule.pointsRuleId# ]]>
				</isGreaterThan>
			
				<isNotEmpty property="pointsRule.startTime" prepend=" and ">
					<![CDATA[  start_time <= #pointsRule.startTime# ]]>
				</isNotEmpty>
			
				<isNotEmpty property="pointsRule.endTime" prepend=" and ">
					<![CDATA[  ( end_time is null or end_time >= #pointsRule.endTime# ) ]]>
				</isNotEmpty>
				<isNotEmpty property="expireDate" prepend=" and ">
					<![CDATA[  ( end_time is not null and  end_time < #expireDate# ) ]]>
				</isNotEmpty>
				<isNotEmpty property="pointsRule.ruleName" prepend=" and ">
					<![CDATA[ rule_name like #pointsRule.ruleName# ]]>
				</isNotEmpty>
			
				<isNotEmpty property="pointsRule.ruleType" prepend=" and ">
					<![CDATA[ rule_type = #pointsRule.ruleType# ]]>
				</isNotEmpty>
				<isNotEmpty property="pointsRule.valueType" prepend=" and ">
					<![CDATA[ value_type = #pointsRule.valueType# ]]>
				</isNotEmpty>
				<isNotEmpty property="pointsRule.state" prepend=" and ">
					<![CDATA[ state = #pointsRule.state# ]]>
				</isNotEmpty>
			</dynamic>
			ORDER BY points_rule_id LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisPointsRuleDAO.queryCount -->
    <select id="MS-POINTS-RULE-QUERY-COUNT" resultClass="long">
        select /*MS-ESUPPLIER-POINTS-RULE-QUERY-COUNT*/  count(*) from points_rule where 1=1
			
			<dynamic>
				<isGreaterThan property="pointsRule.pointsRuleId" compareValue="0"  prepend=" and ">
					<![CDATA[ points_rule_id = #pointsRule.pointsRuleId# ]]>
				</isGreaterThan>

				<isNotEmpty property="pointsRule.startTime" prepend=" and ">
					<![CDATA[  start_time <= #pointsRule.startTime# ]]>
				</isNotEmpty>

				<isNotEmpty property="pointsRule.endTime" prepend=" and ">
					<![CDATA[  ( end_time is null or end_time >= #pointsRule.endTime# ) ]]>
				</isNotEmpty>
				<isNotEmpty property="expireDate" prepend=" and ">
					<![CDATA[  ( end_time is not null and  end_time < #expireDate# ) ]]>
				</isNotEmpty>
				<isNotEmpty property="pointsRule.ruleName" prepend=" and ">
					<![CDATA[ rule_name like #pointsRule.ruleName# ]]>
				</isNotEmpty>

				<isNotEmpty property="pointsRule.ruleType" prepend=" and ">
					<![CDATA[ rule_type = #pointsRule.ruleType# ]]>
				</isNotEmpty>
				<isNotEmpty property="pointsRule.valueType" prepend=" and ">
					<![CDATA[ value_type = #pointsRule.valueType# ]]>
				</isNotEmpty>
				<isNotEmpty property="pointsRule.state" prepend=" and ">
					<![CDATA[ state = #pointsRule.state# ]]>
				</isNotEmpty>
			</dynamic>
    </select>

    <!-- mapped statement for IbatisPointsRuleDAO.findAllCount -->
    <select id="MS-POINTS-RULE-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-ESUPPLIER-POINTS-RULE-FIND-ALL-COUNT*/ COUNT(*) from points_rule
    ]]>
    </select>

    <!-- mapped statement for IbatisPointsRuleDAO.insertAutotest -->
    <insert id="MS-POINTS-RULE-INSERT-AUTOTEST">
    <![CDATA[
        insert /*MS-ESUPPLIER-POINTS-RULE-INSERT-AUTOTEST*/ into points_rule(points_rule_id,rule_name,start_time,end_time,rule_type,value_type,state,point_value,def1,def2,def3,raw_add_time) values (#pointsRuleId#, #ruleName#, #startTime#, #endTime#, #ruleType#, #valueType#, #state#, #pointValue#, #def1#, #def2#, #def3#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisPointsRuleDAO.findByRuleTypeWaitAutotest -->
    <select id="MS-POINTS-RULE-FIND-BY-RULE-TYPE-WAIT-AUTOTEST" resultMap="RM-POINTS-RULE">
    <![CDATA[
        select /*MS-ESUPPLIER-POINTS-RULE-FIND-BY-RULE-TYPE-WAIT-AUTOTEST*/ * from points_rule where ((rule_type = #value#) AND (state = "wait"))
    ]]>
    </select>

    <!-- mapped statement for IbatisPointsRuleDAO.findByIdAutotest -->
    <select id="MS-POINTS-RULE-FIND-BY-ID-AUTOTEST" resultMap="RM-POINTS-RULE">
    <![CDATA[
        select /*MS-ESUPPLIER-POINTS-RULE-FIND-BY-ID-AUTOTEST*/ * from points_rule where (points_rule_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisPointsRuleDAO.deleteByRuleTypeAutotest -->
    <delete id="MS-POINTS-RULE-DELETE-BY-RULE-TYPE-AUTOTEST">
    <![CDATA[
        delete /*MS-ESUPPLIER-POINTS-RULE-DELETE-BY-RULE-TYPE-AUTOTEST*/ from points_rule where (rule_type = #value#)
    ]]>
    </delete>

</sqlMap>
