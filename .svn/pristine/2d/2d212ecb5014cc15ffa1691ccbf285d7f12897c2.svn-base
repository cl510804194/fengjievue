<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table tbl_product_type -->
    <resultMap id="RM-TBL-PRODUCT-TYPE" class="com.yjf.esupplier.dal.dataobject.TblProductTypeDO">
        <result property="ptId" column="pt_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ptCode" column="pt_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="ptTypeName" column="pt_type_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="ptParentId" column="pt_parent_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="priority" column="priority" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ptSeq" column="pt_seq" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="productCount" column="product_count" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="ptCodeLn" column="pt_code_ln" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="ptAddColumns" column="pt_add_columns" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="ptNote" column="pt_note" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="ptTag" column="pt_tag" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="ptKeyWords" column="pt_keyWords" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisTblProductTypeDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisTblProductTypeDAO.insert -->
    <insert id="MS-TBL-PRODUCT-TYPE-INSERT">
    <![CDATA[
        insert /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-INSERT*/ into tbl_product_type(pt_id,pt_code,pt_type_name,pt_parent_id,priority,pt_seq,product_count,pt_code_ln,pt_add_columns,pt_note,pt_tag,pt_keyWords,raw_add_time) values (#ptId#, #ptCode#, #ptTypeName#, #ptParentId#, #priority#, #ptSeq#, #productCount#, #ptCodeLn#, #ptAddColumns#, #ptNote#, #ptTag#, #ptKeyWords#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisTblProductTypeDAO.update -->
    <update id="MS-TBL-PRODUCT-TYPE-UPDATE">
    <![CDATA[
        update /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-UPDATE*/ tbl_product_type set pt_code=#ptCode#, pt_type_name=#ptTypeName#, pt_parent_id=#ptParentId#, priority=#priority#, pt_seq=#ptSeq#, product_count=#productCount#, pt_code_ln=#ptCodeLn#, pt_add_columns=#ptAddColumns#, pt_note=#ptNote#, pt_tag=#ptTag#, pt_keyWords=#ptKeyWords# where (pt_id = #ptId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisTblProductTypeDAO.findByCodeForUpdate -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-CODE-FOR-UPDATE" resultMap="RM-TBL-PRODUCT-TYPE">
    <![CDATA[
        select /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-CODE-FOR-UPDATE*/ * from tbl_product_type where (pt_code = #value#) for update
    ]]>
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.updateProductCount -->
    <update id="MS-TBL-PRODUCT-TYPE-UPDATE-PRODUCT-COUNT">
    <![CDATA[
        update /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-UPDATE-PRODUCT-COUNT*/ tbl_product_type set product_count=(product_count + 1) where (pt_id = #value#)
    ]]>
    </update>

    <!-- mapped statement for IbatisTblProductTypeDAO.findById -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-ID" resultMap="RM-TBL-PRODUCT-TYPE">
    <![CDATA[
        select /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-ID*/ pt_id, pt_code, pt_type_name, pt_parent_id, priority, pt_seq, product_count, pt_code_ln, pt_add_columns, pt_note, pt_tag, pt_keyWords, raw_add_time, raw_update_time from tbl_product_type where (pt_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.findByPtCode -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-PT-CODE" resultMap="RM-TBL-PRODUCT-TYPE">
    <![CDATA[
        select /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-PT-CODE*/ pt_id, pt_code, pt_type_name, pt_parent_id, priority, pt_seq, product_count, pt_code_ln, pt_add_columns, pt_note, pt_tag, pt_keyWords, raw_add_time, raw_update_time from tbl_product_type where (pt_code = #value#) order by pt_code ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.findByLikePtCode -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-LIKE-PT-CODE" resultMap="RM-TBL-PRODUCT-TYPE">
    <![CDATA[
        select /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-LIKE-PT-CODE*/ pt_id, pt_code, pt_type_name, pt_parent_id, priority, pt_seq, product_count, pt_code_ln, pt_add_columns, pt_note, pt_tag, pt_keyWords, raw_add_time, raw_update_time from tbl_product_type where (pt_code LIKE #value#) order by pt_code ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.findByPtParentId -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-PT-PARENT-ID" resultMap="RM-TBL-PRODUCT-TYPE">
    <![CDATA[
        select /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-PT-PARENT-ID*/ pt_id, pt_code, pt_type_name, pt_parent_id, priority, pt_seq, product_count, pt_code_ln, pt_add_columns, pt_note, pt_tag, pt_keyWords, raw_add_time, raw_update_time from tbl_product_type where (pt_parent_id = #value#) order by pt_code ASC
    ]]>
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.findByCondition -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-CONDITION" resultMap="RM-TBL-PRODUCT-TYPE">
        SELECT /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-CONDITION*/  pt_id ,pt_code ,pt_type_name ,pt_parent_id ,priority ,pt_seq ,product_count ,pt_code_ln ,pt_add_columns,pt_note,pt_tag,pt_keyWords,raw_add_time ,raw_update_time  FROM tbl_product_type
	          where 1=1
	        <dynamic>
	            <isGreaterThan property="tblProductType.ptId"  compareValue="0" prepend=" and ">
	                pt_id = #tblProductType.ptId#
	            </isGreaterThan>
	             <isNotEmpty property="tblProductType.ptTypeName" prepend=" and ">
	             	pt_type_name like #tblProductType.ptTypeName#
	             </isNotEmpty>
	              <isNotEmpty property="tblProductType.ptCode" prepend=" and ">
	             	pt_code like #tblProductType.ptCode#
	             </isNotEmpty>
	        </dynamic>
            ORDER by pt_code
            
            LIMIT #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.findByConditionCount -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-BY-CONDITION-COUNT" resultClass="long">
        SELECT /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-BY-CONDITION-COUNT*/  count(*)  FROM tbl_product_type
	          where 1=1
	         <dynamic>
	            <isGreaterThan property="tblProductType.ptId"  compareValue="0" prepend=" and ">
	                pt_id = #tblProductType.ptId#
	            </isGreaterThan>
	             <isNotEmpty property="tblProductType.ptTypeName" prepend=" and ">
	             	pt_type_name like #tblProductType.ptTypeName#
	             </isNotEmpty>
	              <isNotEmpty property="tblProductType.ptCode" prepend=" and ">
	             	pt_code like #tblProductType.ptCode#
	             </isNotEmpty>
	        </dynamic>
    </select>

    <!-- mapped statement for IbatisTblProductTypeDAO.deleteById -->
    <delete id="MS-TBL-PRODUCT-TYPE-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-DELETE-BY-ID*/ from tbl_product_type where (pt_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisTblProductTypeDAO.deleteByPtCode -->
    <delete id="MS-TBL-PRODUCT-TYPE-DELETE-BY-PT-CODE">
    <![CDATA[
        delete /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-DELETE-BY-PT-CODE*/ from tbl_product_type where (pt_code LIKE #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisTblProductTypeDAO.findAllCount -->
    <select id="MS-TBL-PRODUCT-TYPE-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-ESUPPLIER-TBL-PRODUCT-TYPE-FIND-ALL-COUNT*/ COUNT(*) from tbl_product_type
    ]]>
    </select>

</sqlMap>
