<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>specialmer-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="specialmer">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table user_login -->
    <resultMap id="RM-USER-LOGIN" class="com.yjf.esupplier.dal.dataobject.UserLoginDO">
        <result property="loginId" column="login_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="loginName" column="login_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" nullValue="0"/>
        <result property="loginType" column="login_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserLoginDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserLoginDAO.insert -->
    <insert id="MS-USER-LOGIN-INSERT">
    <![CDATA[
        insert /*MS-ESUPPLIER-USER-LOGIN-INSERT*/ into user_login(login_id,login_name,user_id,login_type,raw_add_time) values (#loginId#, #loginName#, #userId#, #loginType#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisUserLoginDAO.update -->
    <update id="MS-USER-LOGIN-UPDATE">
    <![CDATA[
        update /*MS-ESUPPLIER-USER-LOGIN-UPDATE*/ user_login set login_name=#loginName#, user_id=#userId#, login_type=#loginType# where (login_id = #loginId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserLoginDAO.findByUserId -->
    <select id="MS-USER-LOGIN-FIND-BY-USER-ID" resultMap="RM-USER-LOGIN">
    <![CDATA[
        select /*MS-ESUPPLIER-USER-LOGIN-FIND-BY-USER-ID*/ * from user_login where (user_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserLoginDAO.findByLoginName -->
    <select id="MS-USER-LOGIN-FIND-BY-LOGIN-NAME" resultMap="RM-USER-LOGIN">
    <![CDATA[
        select /*MS-ESUPPLIER-USER-LOGIN-FIND-BY-LOGIN-NAME*/ distinct l.* from user_base_info u, user_login l where ((u.user_id = l.user_id) AND (login_name = #value#))
    ]]>
    </select>

    <!-- mapped statement for IbatisUserLoginDAO.findById -->
    <select id="MS-USER-LOGIN-FIND-BY-ID" resultMap="RM-USER-LOGIN">
    <![CDATA[
        select /*MS-ESUPPLIER-USER-LOGIN-FIND-BY-ID*/ * from user_login where (login_id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserLoginDAO.deleteById -->
    <delete id="MS-USER-LOGIN-DELETE-BY-ID">
    <![CDATA[
        delete /*MS-ESUPPLIER-USER-LOGIN-DELETE-BY-ID*/ from user_login where (login_id = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisUserLoginDAO.findAllCount -->
    <select id="MS-USER-LOGIN-FIND-ALL-COUNT" resultClass="long">
    <![CDATA[
        select /*MS-ESUPPLIER-USER-LOGIN-FIND-ALL-COUNT*/ COUNT(*) from user_login
    ]]>
    </select>

    <!-- mapped statement for IbatisUserLoginDAO.deleteByLoginNameAutoTest -->
    <delete id="MS-USER-LOGIN-DELETE-BY-LOGIN-NAME-AUTO-TEST">
    <![CDATA[
        delete /*MS-ESUPPLIER-USER-LOGIN-DELETE-BY-LOGIN-NAME-AUTO-TEST*/ from user_login where (login_name = #value#)
    ]]>
    </delete>

</sqlMap>
