/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.DeliveryPersonDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>delivery_person</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/delivery_person.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface DeliveryPersonDAO {
	/**
	 *  Insert one <tt>DeliveryPersonDO</tt> object to DB table <tt>delivery_person</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into delivery_person(user_id,user_name,real_name,nick_name,belong_to,status,level,service_type,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param deliveryPerson
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(DeliveryPersonDO deliveryPerson) throws DataAccessException;

	/**
	 *  Update DB table <tt>delivery_person</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update delivery_person set user_name=?, real_name=?, nick_name=?, belong_to=?, status=?, level=?, service_type=?, raw_update_time=? where (user_id = ?)</tt>
	 *
	 *	@param deliveryPerson
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(DeliveryPersonDO deliveryPerson) throws DataAccessException;

	/**
	 *  Query DB table <tt>delivery_person</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from delivery_person where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return DeliveryPersonDO
	 *	@throws DataAccessException
	 */	 
    public DeliveryPersonDO findById(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>delivery_person</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from delivery_person where (user_id = ?) for update</tt>
	 *
	 *	@param userId
	 *	@return DeliveryPersonDO
	 *	@throws DataAccessException
	 */	 
    public DeliveryPersonDO findByIdForUpdate(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>delivery_person</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from delivery_person where ((status = ?) AND (belong_to = ?))</tt>
	 *
	 *	@param status
	 *	@param belongTo
	 *	@return List<DeliveryPersonDO>
	 *	@throws DataAccessException
	 */	 
    public List<DeliveryPersonDO> findByCanUse(String status, long belongTo) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>delivery_person</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from delivery_person where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>delivery_person</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from delivery_person</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException;

	/**
	 *  Query DB table <tt>delivery_person</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from delivery_person where (1 = 1)</tt>
	 *
	 *	@param deliveryPerson
	 *	@param limitStart
	 *	@param pageSize
	 *	@param serviceTypeList
	 *	@return List<DeliveryPersonDO>
	 *	@throws DataAccessException
	 */	 
    public List<DeliveryPersonDO> findByCondition(DeliveryPersonDO deliveryPerson, long limitStart, long pageSize, List serviceTypeList) throws DataAccessException;

	/**
	 *  Query DB table <tt>delivery_person</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from delivery_person where (1 = 1)</tt>
	 *
	 *	@param deliveryPerson
	 *	@param limitStart
	 *	@param pageSize
	 *	@param serviceTypeList
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(DeliveryPersonDO deliveryPerson, long limitStart, long pageSize, List serviceTypeList) throws DataAccessException;

}