/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;


import com.yjf.esupplier.dal.dataobject.RechargeFlowDO;
import com.yjf.esupplier.dal.dataobject.RechargeFlowExtraDO;
import org.springframework.dao.DataAccessException;

import java.util.Date;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>recharge_flow</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/recharge_flow.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface RechargeFlowExtraDAO {



	/**
	 *  Query DB table <tt>recharge_flow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select flow_id, user_id, yjf_account_id, out_bizNo, bank_name, bank_account_no, bank_acount_name, amount, pay_type, pay_time, status, rem1 from recharge_flow</tt>
	 *
	 *	@param payType
	 *	@param limitStart
	 *	@param pageSize
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@param accountId
	 *	@return List<RechargeFlowDO>
	 *	@throws org.springframework.dao.DataAccessException
	 */
    public List<RechargeFlowExtraDO> findByCondtion(String userName,String payType, long limitStart, long pageSize, Date startTime, Date endTime, String status, String accountId) throws DataAccessException;

	/**
	 *  Query DB table <tt>recharge_flow</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from recharge_flow</tt>
	 *
	 *	@param payType
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@param accountId
	 *	@return long
	 *	@throws org.springframework.dao.DataAccessException
	 */
    public long findByCountCondtion(String userName,String payType, Date startTime, Date endTime, String status, String accountId) throws DataAccessException;



}