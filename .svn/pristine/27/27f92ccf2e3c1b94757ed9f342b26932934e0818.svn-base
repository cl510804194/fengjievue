package com.yjf.esupplier.service.job;

import com.yjf.esupplier.service.bill.OrderRefundService;
import com.yjf.esupplier.service.job.inter.EsupplierProcessJobService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import java.util.Date;

@Service("o2oOrderRefundError")
public class O2oOrderRefundErrorJob extends YrdJobBase implements EsupplierProcessJobService {
	protected final Logger logger = LoggerFactory.getLogger(getClass());
	@Autowired
	OrderRefundService orderRefundService;
	
	@Scheduled(cron = "0 0 */6 * * ? ")
	@Override
	public synchronized void doJob() throws Exception {
		if (!isRun)
			return;
		try {
			logger.info("团购退款失败重新处理每日任务开始在 " + new Date().toString());
			orderRefundService.checkO2oOrderRefundError();
		} catch (Exception e) {
			logger.error("团购退款失败重新处理异常---异常原因：" + e.getMessage(), e);
		}
		
		logger.info("团购退款失败重新处理每日任务结束在 " + new Date().toString());
		
	}
	
}