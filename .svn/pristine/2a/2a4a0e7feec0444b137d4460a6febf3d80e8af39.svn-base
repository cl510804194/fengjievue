/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.yjf.esupplier.dal.daointerface.DivisionDetailDAO;


// auto generated imports
import com.yjf.esupplier.dal.dataobject.DivisionDetailDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import com.yjf.common.lang.util.money.Money;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
	import java.util.HashMap;
	
/**
 * An ibatis based implementation of dao interface <tt>com.yjf.esupplier.dal.daointerface.DivisionDetailDAO</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/division_detail.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */ 
@SuppressWarnings({ "unchecked", "rawtypes" })

public class IbatisDivisionDetailDAO extends SqlMapClientDaoSupport implements DivisionDetailDAO {
	/**
	 *  Insert one <tt>DivisionDetailDO</tt> object to DB table <tt>division_detail</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into division_detail(detail_id,business_code,user_id,user_name,real_name,trade_id,amount,division_status,division_date,trade_detail_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param divisionDetail
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(DivisionDetailDO divisionDetail) throws DataAccessException {
    	if (divisionDetail == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-DIVISION-DETAIL-INSERT", divisionDetail);

        return divisionDetail.getDetailId();
    }

	/**
	 *  Update DB table <tt>division_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update division_detail set business_code=?, user_id=?, user_name=?, real_name=?, trade_id=?, amount=?, division_status=?, division_date=?, trade_detail_id=? where (detail_id = ?)</tt>
	 *
	 *	@param divisionDetail
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(DivisionDetailDO divisionDetail) throws DataAccessException {
    	if (divisionDetail == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-DIVISION-DETAIL-UPDATE", divisionDetail);
    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return DivisionDetailDO
	 *	@throws DataAccessException
	 */	 
    public DivisionDetailDO findById(long detailId) throws DataAccessException {
        Long param = new Long(detailId);

        return (DivisionDetailDO) getSqlMapClientTemplate().queryForObject("MS-DIVISION-DETAIL-FIND-BY-ID", param);

    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail where (detail_id = ?) for update</tt>
	 *
	 *	@param detailId
	 *	@return DivisionDetailDO
	 *	@throws DataAccessException
	 */	 
    public DivisionDetailDO findByIdForUpdate(long detailId) throws DataAccessException {
        Long param = new Long(detailId);

        return (DivisionDetailDO) getSqlMapClientTemplate().queryForObject("MS-DIVISION-DETAIL-FIND-BY-ID-FOR-UPDATE", param);

    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail where (division_status = ?)</tt>
	 *
	 *	@param divisionStatus
	 *	@return List<DivisionDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<DivisionDetailDO> findByStatus(boolean divisionStatus) throws DataAccessException {
        Boolean param = new Boolean(divisionStatus);

        return getSqlMapClientTemplate().queryForList("MS-DIVISION-DETAIL-FIND-BY-STATUS", param);

    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select sum(amount) amount from division_detail where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return Money
	 *	@throws DataAccessException
	 */	 
    public Money findByUserIdAllAmount(long userId) throws DataAccessException {
        Long param = new Long(userId);

        return (Money) getSqlMapClientTemplate().queryForObject("MS-DIVISION-DETAIL-FIND-BY-USER-ID-ALL-AMOUNT", param);

    }

	/**
	 *  Delete records from DB table <tt>division_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from division_detail where (detail_id = ?)</tt>
	 *
	 *	@param detailId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long detailId) throws DataAccessException {
        Long param = new Long(detailId);

        return getSqlMapClientTemplate().delete("MS-DIVISION-DETAIL-DELETE-BY-ID", param);
    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from division_detail</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findAllCount() throws DataAccessException {

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-DIVISION-DETAIL-FIND-ALL-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select detail_id, business_code, user_id, user_name, real_name, trade_id, amount, division_status, division_date, trade_detail_id from division_detail</tt>
	 *
	 *	@param divisionDetail
	 *	@param limitStart
	 *	@param pageSize
	 *	@param startDate
	 *	@param endDate
	 *	@return List<DivisionDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<DivisionDetailDO> findByCondition(DivisionDetailDO divisionDetail, long limitStart, long pageSize, Date startDate, Date endDate) throws DataAccessException {
    	if (divisionDetail == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("divisionDetail", divisionDetail);
        param.put("limitStart", new Long(limitStart));
        param.put("pageSize", new Long(pageSize));
        param.put("startDate", startDate);
        param.put("endDate", endDate);

        return getSqlMapClientTemplate().queryForList("MS-DIVISION-DETAIL-FIND-BY-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) totalcount, sum(amount) amount from division_detail</tt>
	 *
	 *	@param divisionDetail
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public HashMap findByCountCondition(DivisionDetailDO divisionDetail, Date startDate, Date endDate) throws DataAccessException {
    	if (divisionDetail == null) {
    		throw new IllegalArgumentException("Can't select by a null data object.");
    	}

        Map param = new HashMap();

        param.put("divisionDetail", divisionDetail);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-DIVISION-DETAIL-FIND-BY-COUNT-CONDITION", param);

    }

	/**
	 *  Query DB table <tt>division_detail</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from division_detail where (trade_id = ?)</tt>
	 *
	 *	@param tradeId
	 *	@return List<DivisionDetailDO>
	 *	@throws DataAccessException
	 */	 
    public List<DivisionDetailDO> findByTradeIdAutotest(long tradeId) throws DataAccessException {
        Long param = new Long(tradeId);

        return getSqlMapClientTemplate().queryForList("MS-DIVISION-DETAIL-FIND-BY-TRADE-ID-AUTOTEST", param);

    }

	/**
	 *  Delete records from DB table <tt>division_detail</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from division_detail where (trade_id = ?)</tt>
	 *
	 *	@param tradeId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByTradeIdAutotest(long tradeId) throws DataAccessException {
        Long param = new Long(tradeId);

        return getSqlMapClientTemplate().delete("MS-DIVISION-DETAIL-DELETE-BY-TRADE-ID-AUTOTEST", param);
    }

}