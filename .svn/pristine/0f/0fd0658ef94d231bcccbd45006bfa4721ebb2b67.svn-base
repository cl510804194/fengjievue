/**
 * www.yiji.com Inc.
 * Copyright (c) 2011 All Rights Reserved.
 */
package com.yjf.esupplier.dal.daointerface;

// auto generated imports
import com.yjf.esupplier.dal.dataobject.TblProductPropertyDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>tbl_product_property</tt>.
 *
 * This file is generated by <tt>specialmer-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/tbl_product_property.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>specialmer-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface TblProductPropertyDAO {
	/**
	 *  Insert one <tt>TblProductPropertyDO</tt> object to DB table <tt>tbl_product_property</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into tbl_product_property(property_id,property_code,property_name,property_type,product_type,raw_add_time) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param tblProductProperty
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long insert(TblProductPropertyDO tblProductProperty) throws DataAccessException;

	/**
	 *  Update DB table <tt>tbl_product_property</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update tbl_product_property set property_code=?, property_name=?, property_type=?, product_type=? where (property_id = ?)</tt>
	 *
	 *	@param tblProductProperty
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(TblProductPropertyDO tblProductProperty) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_product_property</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select property_id, property_code, property_name, property_type, product_type, raw_add_time, raw_update_time from tbl_product_property where (property_id = ?)</tt>
	 *
	 *	@param propertyId
	 *	@return TblProductPropertyDO
	 *	@throws DataAccessException
	 */	 
    public TblProductPropertyDO findById(long propertyId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_product_property</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select property_id, property_code, property_name, property_type, product_type, raw_add_time, raw_update_time from tbl_product_property where (property_code = ?)</tt>
	 *
	 *	@param propertyCode
	 *	@return TblProductPropertyDO
	 *	@throws DataAccessException
	 */	 
    public TblProductPropertyDO findByCode(String propertyCode) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_product_property</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select property_id, property_code, property_name, property_type, product_type, raw_add_time, raw_update_time from tbl_product_property where (property_name = ?)</tt>
	 *
	 *	@param propertyName
	 *	@return TblProductPropertyDO
	 *	@throws DataAccessException
	 */	 
    public TblProductPropertyDO findByName(String propertyName) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>tbl_product_property</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from tbl_product_property where (property_id = ?)</tt>
	 *
	 *	@param propertyId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteById(long propertyId) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_product_property</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_product_property</tt>
	 *
	 *	@return List<Long>
	 *	@throws DataAccessException
	 */	 
    public List<Long> findAllCount() throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_product_property</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select property_id, property_code, property_name, property_type, product_type, raw_add_time, raw_update_time from tbl_product_property where (1 = 1)</tt>
	 *
	 *	@param tblProductProperty
	 *	@param limitStart
	 *	@param pageSize
	 *	@param beginDate
	 *	@param endDate
	 *	@return List<TblProductPropertyDO>
	 *	@throws DataAccessException
	 */	 
    public List<TblProductPropertyDO> findByCondition(TblProductPropertyDO tblProductProperty, long limitStart, long pageSize, Date beginDate, Date endDate) throws DataAccessException;

	/**
	 *  Query DB table <tt>tbl_product_property</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from tbl_product_property where (1 = 1)</tt>
	 *
	 *	@param tblProductProperty
	 *	@param beginDate
	 *	@param endDate
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long findByConditionCount(TblProductPropertyDO tblProductProperty, Date beginDate, Date endDate) throws DataAccessException;

}